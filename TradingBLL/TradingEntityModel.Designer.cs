//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TradingModel", "FK_Account_Transaction_BANK", "BANK", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.BANK), "Account_Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Account_Transaction), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Account_Transaction_Invoices", "Invoices", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.Invoice), "Account_Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Account_Transaction), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_ORDER_BUYER", "BUYER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.BUYER), "ORDER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.ORDER), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Exchange_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.Currency), "Exchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Exchange), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Exchange_Currency1", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.Currency), "Exchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Exchange), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_SHIP_SUPP_Frieght", "Frieght", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.Frieght), "SHIP_SUPP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.SHIP_SUPP), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Inventory_PRODUCT", "PRODUCT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.PRODUCT), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Inventory), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Invoices_SHIP_SUPP", "SHIP_SUPP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.SHIP_SUPP), "Invoices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Invoice), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_SHIP_SUPP_Payments", "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.Payment), "SHIP_SUPP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.SHIP_SUPP), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_SHIP_PRD_PRODUCT", "PRODUCT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.PRODUCT), "SHIP_PRD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.SHIP_PRD), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_SHIP_SUPP_SUPPLIER", "SUPPLIER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.SUPPLIER), "SHIP_SUPP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.SHIP_SUPP), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_SHIP_SUPP_ORDER", "ORDER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.ORDER), "SHIP_SUPP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.SHIP_SUPP), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_SHIP_PRD_SHIP_SUPP", "SHIP_SUPP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.SHIP_SUPP), "SHIP_PRD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.SHIP_PRD), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Inventory_SHIP_PRD", "SHIP_PRD", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.SHIP_PRD), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Inventory), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Order_prod_ORDER", "ORDER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.ORDER), "Order_prod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Order_prod), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Order_prod_Payments", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.Payment), "Order_prod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Order_prod), true)]
[assembly: EdmRelationshipAttribute("TradingModel", "FK_Order_prod_PRODUCT", "PRODUCT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TradingBLL.PRODUCT), "Order_prod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TradingBLL.Order_prod), true)]

#endregion

namespace TradingBLL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TradingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TradingEntities object using the connection string found in the 'TradingEntities' section of the application configuration file.
        /// </summary>
        public TradingEntities() : base("name=TradingEntities", "TradingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TradingEntities object.
        /// </summary>
        public TradingEntities(string connectionString) : base(connectionString, "TradingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TradingEntities object.
        /// </summary>
        public TradingEntities(EntityConnection connection) : base(connection, "TradingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account_Transaction> Account_Transaction
        {
            get
            {
                if ((_Account_Transaction == null))
                {
                    _Account_Transaction = base.CreateObjectSet<Account_Transaction>("Account_Transaction");
                }
                return _Account_Transaction;
            }
        }
        private ObjectSet<Account_Transaction> _Account_Transaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BANK> BANKs
        {
            get
            {
                if ((_BANKs == null))
                {
                    _BANKs = base.CreateObjectSet<BANK>("BANKs");
                }
                return _BANKs;
            }
        }
        private ObjectSet<BANK> _BANKs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BUYER> BUYERs
        {
            get
            {
                if ((_BUYERs == null))
                {
                    _BUYERs = base.CreateObjectSet<BUYER>("BUYERs");
                }
                return _BUYERs;
            }
        }
        private ObjectSet<BUYER> _BUYERs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exchange> Exchanges
        {
            get
            {
                if ((_Exchanges == null))
                {
                    _Exchanges = base.CreateObjectSet<Exchange>("Exchanges");
                }
                return _Exchanges;
            }
        }
        private ObjectSet<Exchange> _Exchanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Frieght> Frieghts
        {
            get
            {
                if ((_Frieghts == null))
                {
                    _Frieghts = base.CreateObjectSet<Frieght>("Frieghts");
                }
                return _Frieghts;
            }
        }
        private ObjectSet<Frieght> _Frieghts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ORDER> ORDERs
        {
            get
            {
                if ((_ORDERs == null))
                {
                    _ORDERs = base.CreateObjectSet<ORDER>("ORDERs");
                }
                return _ORDERs;
            }
        }
        private ObjectSet<ORDER> _ORDERs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PRODUCT> PRODUCTs
        {
            get
            {
                if ((_PRODUCTs == null))
                {
                    _PRODUCTs = base.CreateObjectSet<PRODUCT>("PRODUCTs");
                }
                return _PRODUCTs;
            }
        }
        private ObjectSet<PRODUCT> _PRODUCTs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SHIP_PRD> SHIP_PRD
        {
            get
            {
                if ((_SHIP_PRD == null))
                {
                    _SHIP_PRD = base.CreateObjectSet<SHIP_PRD>("SHIP_PRD");
                }
                return _SHIP_PRD;
            }
        }
        private ObjectSet<SHIP_PRD> _SHIP_PRD;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SHIP_SUPP> SHIP_SUPP
        {
            get
            {
                if ((_SHIP_SUPP == null))
                {
                    _SHIP_SUPP = base.CreateObjectSet<SHIP_SUPP>("SHIP_SUPP");
                }
                return _SHIP_SUPP;
            }
        }
        private ObjectSet<SHIP_SUPP> _SHIP_SUPP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SUPPLIER> SUPPLIERs
        {
            get
            {
                if ((_SUPPLIERs == null))
                {
                    _SUPPLIERs = base.CreateObjectSet<SUPPLIER>("SUPPLIERs");
                }
                return _SUPPLIERs;
            }
        }
        private ObjectSet<SUPPLIER> _SUPPLIERs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLogin> UserLogins
        {
            get
            {
                if ((_UserLogins == null))
                {
                    _UserLogins = base.CreateObjectSet<UserLogin>("UserLogins");
                }
                return _UserLogins;
            }
        }
        private ObjectSet<UserLogin> _UserLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order_prod> Order_prod
        {
            get
            {
                if ((_Order_prod == null))
                {
                    _Order_prod = base.CreateObjectSet<Order_prod>("Order_prod");
                }
                return _Order_prod;
            }
        }
        private ObjectSet<Order_prod> _Order_prod;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DummyView> DummyViews
        {
            get
            {
                if ((_DummyViews == null))
                {
                    _DummyViews = base.CreateObjectSet<DummyView>("DummyViews");
                }
                return _DummyViews;
            }
        }
        private ObjectSet<DummyView> _DummyViews;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Account_Transaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccount_Transaction(Account_Transaction account_Transaction)
        {
            base.AddObject("Account_Transaction", account_Transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BANKs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBANKs(BANK bANK)
        {
            base.AddObject("BANKs", bANK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BUYERs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBUYERs(BUYER bUYER)
        {
            base.AddObject("BUYERs", bUYER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exchanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExchanges(Exchange exchange)
        {
            base.AddObject("Exchanges", exchange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Frieghts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFrieghts(Frieght frieght)
        {
            base.AddObject("Frieghts", frieght);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ORDERs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToORDERs(ORDER oRDER)
        {
            base.AddObject("ORDERs", oRDER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PRODUCTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPRODUCTs(PRODUCT pRODUCT)
        {
            base.AddObject("PRODUCTs", pRODUCT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SHIP_PRD EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSHIP_PRD(SHIP_PRD sHIP_PRD)
        {
            base.AddObject("SHIP_PRD", sHIP_PRD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SHIP_SUPP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSHIP_SUPP(SHIP_SUPP sHIP_SUPP)
        {
            base.AddObject("SHIP_SUPP", sHIP_SUPP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SUPPLIERs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSUPPLIERs(SUPPLIER sUPPLIER)
        {
            base.AddObject("SUPPLIERs", sUPPLIER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLogins(UserLogin userLogin)
        {
            base.AddObject("UserLogins", userLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Order_prod EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrder_prod(Order_prod order_prod)
        {
            base.AddObject("Order_prod", order_prod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DummyViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDummyViews(DummyView dummyView)
        {
            base.AddObject("DummyViews", dummyView);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexProducts> ShowProducts()
        {
            return base.ExecuteFunction<ComplexProducts>("ShowProducts");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="cp">No Metadata Documentation available.</param>
        /// <param name="sp">No Metadata Documentation available.</param>
        /// <param name="desc">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertProduct(global::System.String name, global::System.String cp, global::System.String sp, global::System.String desc, global::System.String category, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter cpParameter;
            if (cp != null)
            {
                cpParameter = new ObjectParameter("cp", cp);
            }
            else
            {
                cpParameter = new ObjectParameter("cp", typeof(global::System.String));
            }
    
            ObjectParameter spParameter;
            if (sp != null)
            {
                spParameter = new ObjectParameter("sp", sp);
            }
            else
            {
                spParameter = new ObjectParameter("sp", typeof(global::System.String));
            }
    
            ObjectParameter descParameter;
            if (desc != null)
            {
                descParameter = new ObjectParameter("desc", desc);
            }
            else
            {
                descParameter = new ObjectParameter("desc", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("category", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertProduct", nameParameter, cpParameter, spParameter, descParameter, categoryParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="cp">No Metadata Documentation available.</param>
        /// <param name="sp">No Metadata Documentation available.</param>
        /// <param name="desc">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int UpdateProduct(Nullable<global::System.Int32> id, global::System.String name, global::System.String cp, global::System.String sp, global::System.String desc, global::System.String category, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter cpParameter;
            if (cp != null)
            {
                cpParameter = new ObjectParameter("cp", cp);
            }
            else
            {
                cpParameter = new ObjectParameter("cp", typeof(global::System.String));
            }
    
            ObjectParameter spParameter;
            if (sp != null)
            {
                spParameter = new ObjectParameter("sp", sp);
            }
            else
            {
                spParameter = new ObjectParameter("sp", typeof(global::System.String));
            }
    
            ObjectParameter descParameter;
            if (desc != null)
            {
                descParameter = new ObjectParameter("desc", desc);
            }
            else
            {
                descParameter = new ObjectParameter("desc", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("category", typeof(global::System.String));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UpdateProduct", idParameter, nameParameter, cpParameter, spParameter, descParameter, categoryParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteProduct(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteProduct", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexBuyer> ShowBuyer()
        {
            return base.ExecuteFunction<ComplexBuyer>("ShowBuyer");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="buyer_name">No Metadata Documentation available.</param>
        /// <param name="buyer_contact">No Metadata Documentation available.</param>
        /// <param name="buyer_email">No Metadata Documentation available.</param>
        /// <param name="buyer_account">No Metadata Documentation available.</param>
        /// <param name="buyer_company">No Metadata Documentation available.</param>
        /// <param name="buyer_remarks">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertBuyer(global::System.String buyer_name, global::System.String buyer_contact, global::System.String buyer_email, global::System.String buyer_account, global::System.String buyer_company, global::System.String buyer_remarks, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter buyer_nameParameter;
            if (buyer_name != null)
            {
                buyer_nameParameter = new ObjectParameter("buyer_name", buyer_name);
            }
            else
            {
                buyer_nameParameter = new ObjectParameter("buyer_name", typeof(global::System.String));
            }
    
            ObjectParameter buyer_contactParameter;
            if (buyer_contact != null)
            {
                buyer_contactParameter = new ObjectParameter("buyer_contact", buyer_contact);
            }
            else
            {
                buyer_contactParameter = new ObjectParameter("buyer_contact", typeof(global::System.String));
            }
    
            ObjectParameter buyer_emailParameter;
            if (buyer_email != null)
            {
                buyer_emailParameter = new ObjectParameter("buyer_email", buyer_email);
            }
            else
            {
                buyer_emailParameter = new ObjectParameter("buyer_email", typeof(global::System.String));
            }
    
            ObjectParameter buyer_accountParameter;
            if (buyer_account != null)
            {
                buyer_accountParameter = new ObjectParameter("buyer_account", buyer_account);
            }
            else
            {
                buyer_accountParameter = new ObjectParameter("buyer_account", typeof(global::System.String));
            }
    
            ObjectParameter buyer_companyParameter;
            if (buyer_company != null)
            {
                buyer_companyParameter = new ObjectParameter("buyer_company", buyer_company);
            }
            else
            {
                buyer_companyParameter = new ObjectParameter("buyer_company", typeof(global::System.String));
            }
    
            ObjectParameter buyer_remarksParameter;
            if (buyer_remarks != null)
            {
                buyer_remarksParameter = new ObjectParameter("buyer_remarks", buyer_remarks);
            }
            else
            {
                buyer_remarksParameter = new ObjectParameter("buyer_remarks", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertBuyer", buyer_nameParameter, buyer_contactParameter, buyer_emailParameter, buyer_accountParameter, buyer_companyParameter, buyer_remarksParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="buyer_name">No Metadata Documentation available.</param>
        /// <param name="buyer_contact">No Metadata Documentation available.</param>
        /// <param name="buyer_email">No Metadata Documentation available.</param>
        /// <param name="buyer_account">No Metadata Documentation available.</param>
        /// <param name="buyer_company">No Metadata Documentation available.</param>
        /// <param name="buyer_remarks">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int UpdateBuyer(Nullable<global::System.Int32> id, global::System.String buyer_name, global::System.String buyer_contact, global::System.String buyer_email, global::System.String buyer_account, global::System.String buyer_company, global::System.String buyer_remarks, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter buyer_nameParameter;
            if (buyer_name != null)
            {
                buyer_nameParameter = new ObjectParameter("buyer_name", buyer_name);
            }
            else
            {
                buyer_nameParameter = new ObjectParameter("buyer_name", typeof(global::System.String));
            }
    
            ObjectParameter buyer_contactParameter;
            if (buyer_contact != null)
            {
                buyer_contactParameter = new ObjectParameter("buyer_contact", buyer_contact);
            }
            else
            {
                buyer_contactParameter = new ObjectParameter("buyer_contact", typeof(global::System.String));
            }
    
            ObjectParameter buyer_emailParameter;
            if (buyer_email != null)
            {
                buyer_emailParameter = new ObjectParameter("buyer_email", buyer_email);
            }
            else
            {
                buyer_emailParameter = new ObjectParameter("buyer_email", typeof(global::System.String));
            }
    
            ObjectParameter buyer_accountParameter;
            if (buyer_account != null)
            {
                buyer_accountParameter = new ObjectParameter("buyer_account", buyer_account);
            }
            else
            {
                buyer_accountParameter = new ObjectParameter("buyer_account", typeof(global::System.String));
            }
    
            ObjectParameter buyer_companyParameter;
            if (buyer_company != null)
            {
                buyer_companyParameter = new ObjectParameter("buyer_company", buyer_company);
            }
            else
            {
                buyer_companyParameter = new ObjectParameter("buyer_company", typeof(global::System.String));
            }
    
            ObjectParameter buyer_remarksParameter;
            if (buyer_remarks != null)
            {
                buyer_remarksParameter = new ObjectParameter("buyer_remarks", buyer_remarks);
            }
            else
            {
                buyer_remarksParameter = new ObjectParameter("buyer_remarks", typeof(global::System.String));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UpdateBuyer", idParameter, buyer_nameParameter, buyer_contactParameter, buyer_emailParameter, buyer_accountParameter, buyer_companyParameter, buyer_remarksParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteBuyer(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBuyer", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexFreight> ShowFreight()
        {
            return base.ExecuteFunction<ComplexFreight>("ShowFreight");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="company">No Metadata Documentation available.</param>
        /// <param name="ref">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertFreight(global::System.String name, global::System.String company, global::System.String @ref, global::System.String email, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter companyParameter;
            if (company != null)
            {
                companyParameter = new ObjectParameter("company", company);
            }
            else
            {
                companyParameter = new ObjectParameter("company", typeof(global::System.String));
            }
    
            ObjectParameter refParameter;
            if (@ref != null)
            {
                refParameter = new ObjectParameter("ref", @ref);
            }
            else
            {
                refParameter = new ObjectParameter("ref", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("email", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertFreight", nameParameter, companyParameter, refParameter, emailParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="company">No Metadata Documentation available.</param>
        /// <param name="ref">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int UpdateFreight(Nullable<global::System.Int32> id, global::System.String name, global::System.String company, global::System.String @ref, global::System.String email, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter companyParameter;
            if (company != null)
            {
                companyParameter = new ObjectParameter("company", company);
            }
            else
            {
                companyParameter = new ObjectParameter("company", typeof(global::System.String));
            }
    
            ObjectParameter refParameter;
            if (@ref != null)
            {
                refParameter = new ObjectParameter("ref", @ref);
            }
            else
            {
                refParameter = new ObjectParameter("ref", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("email", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UpdateFreight", idParameter, nameParameter, companyParameter, refParameter, emailParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteFreight(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteFreight", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexSupplier> ShowSupplier()
        {
            return base.ExecuteFunction<ComplexSupplier>("ShowSupplier");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="supp_name">No Metadata Documentation available.</param>
        /// <param name="supp_contact">No Metadata Documentation available.</param>
        /// <param name="supp_email">No Metadata Documentation available.</param>
        /// <param name="supp_company">No Metadata Documentation available.</param>
        /// <param name="supp_remarks">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertSupplier(global::System.String supp_name, global::System.String supp_contact, global::System.String supp_email, global::System.String supp_company, global::System.String supp_remarks, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter supp_nameParameter;
            if (supp_name != null)
            {
                supp_nameParameter = new ObjectParameter("supp_name", supp_name);
            }
            else
            {
                supp_nameParameter = new ObjectParameter("supp_name", typeof(global::System.String));
            }
    
            ObjectParameter supp_contactParameter;
            if (supp_contact != null)
            {
                supp_contactParameter = new ObjectParameter("supp_contact", supp_contact);
            }
            else
            {
                supp_contactParameter = new ObjectParameter("supp_contact", typeof(global::System.String));
            }
    
            ObjectParameter supp_emailParameter;
            if (supp_email != null)
            {
                supp_emailParameter = new ObjectParameter("supp_email", supp_email);
            }
            else
            {
                supp_emailParameter = new ObjectParameter("supp_email", typeof(global::System.String));
            }
    
            ObjectParameter supp_companyParameter;
            if (supp_company != null)
            {
                supp_companyParameter = new ObjectParameter("supp_company", supp_company);
            }
            else
            {
                supp_companyParameter = new ObjectParameter("supp_company", typeof(global::System.String));
            }
    
            ObjectParameter supp_remarksParameter;
            if (supp_remarks != null)
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", supp_remarks);
            }
            else
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertSupplier", supp_nameParameter, supp_contactParameter, supp_emailParameter, supp_companyParameter, supp_remarksParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="supp_name">No Metadata Documentation available.</param>
        /// <param name="supp_contact">No Metadata Documentation available.</param>
        /// <param name="supp_email">No Metadata Documentation available.</param>
        /// <param name="supp_company">No Metadata Documentation available.</param>
        /// <param name="supp_remarks">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int UpdateSupplier(Nullable<global::System.Int32> id, global::System.String supp_name, global::System.String supp_contact, global::System.String supp_email, global::System.String supp_company, global::System.String supp_remarks, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter supp_nameParameter;
            if (supp_name != null)
            {
                supp_nameParameter = new ObjectParameter("supp_name", supp_name);
            }
            else
            {
                supp_nameParameter = new ObjectParameter("supp_name", typeof(global::System.String));
            }
    
            ObjectParameter supp_contactParameter;
            if (supp_contact != null)
            {
                supp_contactParameter = new ObjectParameter("supp_contact", supp_contact);
            }
            else
            {
                supp_contactParameter = new ObjectParameter("supp_contact", typeof(global::System.String));
            }
    
            ObjectParameter supp_emailParameter;
            if (supp_email != null)
            {
                supp_emailParameter = new ObjectParameter("supp_email", supp_email);
            }
            else
            {
                supp_emailParameter = new ObjectParameter("supp_email", typeof(global::System.String));
            }
    
            ObjectParameter supp_companyParameter;
            if (supp_company != null)
            {
                supp_companyParameter = new ObjectParameter("supp_company", supp_company);
            }
            else
            {
                supp_companyParameter = new ObjectParameter("supp_company", typeof(global::System.String));
            }
    
            ObjectParameter supp_remarksParameter;
            if (supp_remarks != null)
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", supp_remarks);
            }
            else
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", typeof(global::System.String));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UpdateSupplier", idParameter, supp_nameParameter, supp_contactParameter, supp_emailParameter, supp_companyParameter, supp_remarksParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteSupplier(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteSupplier", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<ScalarLogin> CheckLogin(global::System.String userid)
        {
            ObjectParameter useridParameter;
            if (userid != null)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarLogin>("CheckLogin", useridParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="buyername">No Metadata Documentation available.</param>
        /// <param name="order_name">No Metadata Documentation available.</param>
        /// <param name="order_date">No Metadata Documentation available.</param>
        /// <param name="order_total">No Metadata Documentation available.</param>
        /// <param name="required_date">No Metadata Documentation available.</param>
        /// <param name="shipped_date">No Metadata Documentation available.</param>
        /// <param name="ref">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertOrder(global::System.String buyername, global::System.String order_name, Nullable<global::System.DateTime> order_date, Nullable<global::System.Double> order_total, Nullable<global::System.DateTime> required_date, Nullable<global::System.DateTime> shipped_date, global::System.String @ref, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter buyernameParameter;
            if (buyername != null)
            {
                buyernameParameter = new ObjectParameter("buyername", buyername);
            }
            else
            {
                buyernameParameter = new ObjectParameter("buyername", typeof(global::System.String));
            }
    
            ObjectParameter order_nameParameter;
            if (order_name != null)
            {
                order_nameParameter = new ObjectParameter("order_name", order_name);
            }
            else
            {
                order_nameParameter = new ObjectParameter("order_name", typeof(global::System.String));
            }
    
            ObjectParameter order_dateParameter;
            if (order_date.HasValue)
            {
                order_dateParameter = new ObjectParameter("order_date", order_date);
            }
            else
            {
                order_dateParameter = new ObjectParameter("order_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter order_totalParameter;
            if (order_total.HasValue)
            {
                order_totalParameter = new ObjectParameter("order_total", order_total);
            }
            else
            {
                order_totalParameter = new ObjectParameter("order_total", typeof(global::System.Double));
            }
    
            ObjectParameter required_dateParameter;
            if (required_date.HasValue)
            {
                required_dateParameter = new ObjectParameter("required_date", required_date);
            }
            else
            {
                required_dateParameter = new ObjectParameter("required_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter shipped_dateParameter;
            if (shipped_date.HasValue)
            {
                shipped_dateParameter = new ObjectParameter("shipped_date", shipped_date);
            }
            else
            {
                shipped_dateParameter = new ObjectParameter("shipped_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter refParameter;
            if (@ref != null)
            {
                refParameter = new ObjectParameter("ref", @ref);
            }
            else
            {
                refParameter = new ObjectParameter("ref", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertOrder", buyernameParameter, order_nameParameter, order_dateParameter, order_totalParameter, required_dateParameter, shipped_dateParameter, refParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderName">No Metadata Documentation available.</param>
        /// <param name="buyername">No Metadata Documentation available.</param>
        /// <param name="orderTotal">No Metadata Documentation available.</param>
        /// <param name="order_date">No Metadata Documentation available.</param>
        /// <param name="required_date">No Metadata Documentation available.</param>
        public int DeleteOrder(global::System.String orderName, global::System.String buyername, Nullable<global::System.Double> orderTotal, Nullable<global::System.DateTime> order_date, Nullable<global::System.DateTime> required_date)
        {
            ObjectParameter orderNameParameter;
            if (orderName != null)
            {
                orderNameParameter = new ObjectParameter("OrderName", orderName);
            }
            else
            {
                orderNameParameter = new ObjectParameter("OrderName", typeof(global::System.String));
            }
    
            ObjectParameter buyernameParameter;
            if (buyername != null)
            {
                buyernameParameter = new ObjectParameter("buyername", buyername);
            }
            else
            {
                buyernameParameter = new ObjectParameter("buyername", typeof(global::System.String));
            }
    
            ObjectParameter orderTotalParameter;
            if (orderTotal.HasValue)
            {
                orderTotalParameter = new ObjectParameter("orderTotal", orderTotal);
            }
            else
            {
                orderTotalParameter = new ObjectParameter("orderTotal", typeof(global::System.Double));
            }
    
            ObjectParameter order_dateParameter;
            if (order_date.HasValue)
            {
                order_dateParameter = new ObjectParameter("order_date", order_date);
            }
            else
            {
                order_dateParameter = new ObjectParameter("order_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter required_dateParameter;
            if (required_date.HasValue)
            {
                required_dateParameter = new ObjectParameter("required_date", required_date);
            }
            else
            {
                required_dateParameter = new ObjectParameter("required_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("DeleteOrder", orderNameParameter, buyernameParameter, orderTotalParameter, order_dateParameter, required_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexOrders> ShowOrder()
        {
            return base.ExecuteFunction<ComplexOrders>("ShowOrder");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarBuyerNames> ShowBuyerNames()
        {
            return base.ExecuteFunction<ScalarBuyerNames>("ShowBuyerNames");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertCurrency(global::System.String name, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertCurrency", nameParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="currency1">No Metadata Documentation available.</param>
        /// <param name="currency2">No Metadata Documentation available.</param>
        /// <param name="exRate">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertExchangeRate(global::System.String currency1, global::System.String currency2, Nullable<global::System.Double> exRate, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter currency1Parameter;
            if (currency1 != null)
            {
                currency1Parameter = new ObjectParameter("Currency1", currency1);
            }
            else
            {
                currency1Parameter = new ObjectParameter("Currency1", typeof(global::System.String));
            }
    
            ObjectParameter currency2Parameter;
            if (currency2 != null)
            {
                currency2Parameter = new ObjectParameter("Currency2", currency2);
            }
            else
            {
                currency2Parameter = new ObjectParameter("Currency2", typeof(global::System.String));
            }
    
            ObjectParameter exRateParameter;
            if (exRate.HasValue)
            {
                exRateParameter = new ObjectParameter("exRate", exRate);
            }
            else
            {
                exRateParameter = new ObjectParameter("exRate", typeof(global::System.Double));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertExchangeRate", currency1Parameter, currency2Parameter, exRateParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexCurrency> ShowCurrency()
        {
            return base.ExecuteFunction<ComplexCurrency>("ShowCurrency");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexExRate> ShowExchangeRates()
        {
            return base.ExecuteFunction<ComplexExRate>("ShowExchangeRates");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="currencyName">No Metadata Documentation available.</param>
        public int DeleteCurrency(global::System.String currencyName)
        {
            ObjectParameter currencyNameParameter;
            if (currencyName != null)
            {
                currencyNameParameter = new ObjectParameter("currencyName", currencyName);
            }
            else
            {
                currencyNameParameter = new ObjectParameter("currencyName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeleteCurrency", currencyNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertPayments(global::System.String type, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertPayments", typeParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexPayments> ShowPayments()
        {
            return base.ExecuteFunction<ComplexPayments>("ShowPayments");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="type">No Metadata Documentation available.</param>
        public int DeletePayments(global::System.String type)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeletePayments", typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarFreightName> ShowFreightNames()
        {
            return base.ExecuteFunction<ScalarFreightName>("ShowFreightNames");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarCurrencyNames> ShowCurrencyNames()
        {
            return base.ExecuteFunction<ScalarCurrencyNames>("ShowCurrencyNames");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarProductNames> ShowProductNames()
        {
            return base.ExecuteFunction<ScalarProductNames>("ShowProductNames");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarSupplierNames> ShowSupplierNames()
        {
            return base.ExecuteFunction<ScalarSupplierNames>("ShowSupplierNames");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarPaymentNames> ShowPaymentNames()
        {
            return base.ExecuteFunction<ScalarPaymentNames>("ShowPaymentNames");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="product_name">No Metadata Documentation available.</param>
        public ObjectResult<ScalarProductCPSP> ShowProduct_SPCP(global::System.String product_name)
        {
            ObjectParameter product_nameParameter;
            if (product_name != null)
            {
                product_nameParameter = new ObjectParameter("product_name", product_name);
            }
            else
            {
                product_nameParameter = new ObjectParameter("product_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarProductCPSP>("ShowProduct_SPCP", product_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int Dummy()
        {
            return base.ExecuteFunction("Dummy");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ship_name">No Metadata Documentation available.</param>
        /// <param name="supp_name">No Metadata Documentation available.</param>
        /// <param name="freight_name">No Metadata Documentation available.</param>
        /// <param name="sh_total">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        /// <param name="service_charges">No Metadata Documentation available.</param>
        /// <param name="shipment_type">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="supp_remarks">No Metadata Documentation available.</param>
        /// <param name="payment_type">No Metadata Documentation available.</param>
        /// <param name="invoice_ref">No Metadata Documentation available.</param>
        /// <param name="invoice_currency">No Metadata Documentation available.</param>
        /// <param name="currency_total">No Metadata Documentation available.</param>
        /// <param name="ex_rate">No Metadata Documentation available.</param>
        public int InsertShipmentSupplierWithInvoice(global::System.String ship_name, global::System.String supp_name, global::System.String freight_name, Nullable<global::System.Double> sh_total, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date, Nullable<global::System.Double> service_charges, global::System.String shipment_type, global::System.String currency, global::System.String supp_remarks, global::System.String payment_type, global::System.String invoice_ref, global::System.String invoice_currency, Nullable<global::System.Double> currency_total, Nullable<global::System.Double> ex_rate)
        {
            ObjectParameter ship_nameParameter;
            if (ship_name != null)
            {
                ship_nameParameter = new ObjectParameter("ship_name", ship_name);
            }
            else
            {
                ship_nameParameter = new ObjectParameter("ship_name", typeof(global::System.String));
            }
    
            ObjectParameter supp_nameParameter;
            if (supp_name != null)
            {
                supp_nameParameter = new ObjectParameter("supp_name", supp_name);
            }
            else
            {
                supp_nameParameter = new ObjectParameter("supp_name", typeof(global::System.String));
            }
    
            ObjectParameter freight_nameParameter;
            if (freight_name != null)
            {
                freight_nameParameter = new ObjectParameter("freight_name", freight_name);
            }
            else
            {
                freight_nameParameter = new ObjectParameter("freight_name", typeof(global::System.String));
            }
    
            ObjectParameter sh_totalParameter;
            if (sh_total.HasValue)
            {
                sh_totalParameter = new ObjectParameter("sh_total", sh_total);
            }
            else
            {
                sh_totalParameter = new ObjectParameter("sh_total", typeof(global::System.Double));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter service_chargesParameter;
            if (service_charges.HasValue)
            {
                service_chargesParameter = new ObjectParameter("service_charges", service_charges);
            }
            else
            {
                service_chargesParameter = new ObjectParameter("service_charges", typeof(global::System.Double));
            }
    
            ObjectParameter shipment_typeParameter;
            if (shipment_type != null)
            {
                shipment_typeParameter = new ObjectParameter("shipment_type", shipment_type);
            }
            else
            {
                shipment_typeParameter = new ObjectParameter("shipment_type", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            ObjectParameter supp_remarksParameter;
            if (supp_remarks != null)
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", supp_remarks);
            }
            else
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", typeof(global::System.String));
            }
    
            ObjectParameter payment_typeParameter;
            if (payment_type != null)
            {
                payment_typeParameter = new ObjectParameter("payment_type", payment_type);
            }
            else
            {
                payment_typeParameter = new ObjectParameter("payment_type", typeof(global::System.String));
            }
    
            ObjectParameter invoice_refParameter;
            if (invoice_ref != null)
            {
                invoice_refParameter = new ObjectParameter("invoice_ref", invoice_ref);
            }
            else
            {
                invoice_refParameter = new ObjectParameter("invoice_ref", typeof(global::System.String));
            }
    
            ObjectParameter invoice_currencyParameter;
            if (invoice_currency != null)
            {
                invoice_currencyParameter = new ObjectParameter("invoice_currency", invoice_currency);
            }
            else
            {
                invoice_currencyParameter = new ObjectParameter("invoice_currency", typeof(global::System.String));
            }
    
            ObjectParameter currency_totalParameter;
            if (currency_total.HasValue)
            {
                currency_totalParameter = new ObjectParameter("currency_total", currency_total);
            }
            else
            {
                currency_totalParameter = new ObjectParameter("currency_total", typeof(global::System.Double));
            }
    
            ObjectParameter ex_rateParameter;
            if (ex_rate.HasValue)
            {
                ex_rateParameter = new ObjectParameter("ex_rate", ex_rate);
            }
            else
            {
                ex_rateParameter = new ObjectParameter("ex_rate", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("InsertShipmentSupplierWithInvoice", ship_nameParameter, supp_nameParameter, freight_nameParameter, sh_totalParameter, e_dateParameter, m_dateParameter, service_chargesParameter, shipment_typeParameter, currencyParameter, supp_remarksParameter, payment_typeParameter, invoice_refParameter, invoice_currencyParameter, currency_totalParameter, ex_rateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shipment_id">No Metadata Documentation available.</param>
        /// <param name="product_name">No Metadata Documentation available.</param>
        /// <param name="prd_cp">No Metadata Documentation available.</param>
        /// <param name="units">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="prd_remarks">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertShipmentProduct(Nullable<global::System.Int32> shipment_id, global::System.String product_name, Nullable<global::System.Double> prd_cp, Nullable<global::System.Int32> units, global::System.String currency, global::System.String prd_remarks, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter shipment_idParameter;
            if (shipment_id.HasValue)
            {
                shipment_idParameter = new ObjectParameter("shipment_id", shipment_id);
            }
            else
            {
                shipment_idParameter = new ObjectParameter("shipment_id", typeof(global::System.Int32));
            }
    
            ObjectParameter product_nameParameter;
            if (product_name != null)
            {
                product_nameParameter = new ObjectParameter("product_name", product_name);
            }
            else
            {
                product_nameParameter = new ObjectParameter("product_name", typeof(global::System.String));
            }
    
            ObjectParameter prd_cpParameter;
            if (prd_cp.HasValue)
            {
                prd_cpParameter = new ObjectParameter("prd_cp", prd_cp);
            }
            else
            {
                prd_cpParameter = new ObjectParameter("prd_cp", typeof(global::System.Double));
            }
    
            ObjectParameter unitsParameter;
            if (units.HasValue)
            {
                unitsParameter = new ObjectParameter("units", units);
            }
            else
            {
                unitsParameter = new ObjectParameter("units", typeof(global::System.Int32));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            ObjectParameter prd_remarksParameter;
            if (prd_remarks != null)
            {
                prd_remarksParameter = new ObjectParameter("prd_remarks", prd_remarks);
            }
            else
            {
                prd_remarksParameter = new ObjectParameter("prd_remarks", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertShipmentProduct", shipment_idParameter, product_nameParameter, prd_cpParameter, unitsParameter, currencyParameter, prd_remarksParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ship_name">No Metadata Documentation available.</param>
        /// <param name="supp_name">No Metadata Documentation available.</param>
        /// <param name="freight_name">No Metadata Documentation available.</param>
        /// <param name="sh_total">No Metadata Documentation available.</param>
        /// <param name="service_charges">No Metadata Documentation available.</param>
        /// <param name="shipment_type">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="supp_remarks">No Metadata Documentation available.</param>
        /// <param name="payment_type">No Metadata Documentation available.</param>
        public ObjectResult<ScalarShipmentId> GetShipmentIdForInvoice(global::System.String ship_name, global::System.String supp_name, global::System.String freight_name, Nullable<global::System.Double> sh_total, Nullable<global::System.Double> service_charges, global::System.String shipment_type, global::System.String currency, global::System.String supp_remarks, global::System.String payment_type)
        {
            ObjectParameter ship_nameParameter;
            if (ship_name != null)
            {
                ship_nameParameter = new ObjectParameter("ship_name", ship_name);
            }
            else
            {
                ship_nameParameter = new ObjectParameter("ship_name", typeof(global::System.String));
            }
    
            ObjectParameter supp_nameParameter;
            if (supp_name != null)
            {
                supp_nameParameter = new ObjectParameter("supp_name", supp_name);
            }
            else
            {
                supp_nameParameter = new ObjectParameter("supp_name", typeof(global::System.String));
            }
    
            ObjectParameter freight_nameParameter;
            if (freight_name != null)
            {
                freight_nameParameter = new ObjectParameter("freight_name", freight_name);
            }
            else
            {
                freight_nameParameter = new ObjectParameter("freight_name", typeof(global::System.String));
            }
    
            ObjectParameter sh_totalParameter;
            if (sh_total.HasValue)
            {
                sh_totalParameter = new ObjectParameter("sh_total", sh_total);
            }
            else
            {
                sh_totalParameter = new ObjectParameter("sh_total", typeof(global::System.Double));
            }
    
            ObjectParameter service_chargesParameter;
            if (service_charges.HasValue)
            {
                service_chargesParameter = new ObjectParameter("service_charges", service_charges);
            }
            else
            {
                service_chargesParameter = new ObjectParameter("service_charges", typeof(global::System.Double));
            }
    
            ObjectParameter shipment_typeParameter;
            if (shipment_type != null)
            {
                shipment_typeParameter = new ObjectParameter("shipment_type", shipment_type);
            }
            else
            {
                shipment_typeParameter = new ObjectParameter("shipment_type", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            ObjectParameter supp_remarksParameter;
            if (supp_remarks != null)
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", supp_remarks);
            }
            else
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", typeof(global::System.String));
            }
    
            ObjectParameter payment_typeParameter;
            if (payment_type != null)
            {
                payment_typeParameter = new ObjectParameter("payment_type", payment_type);
            }
            else
            {
                payment_typeParameter = new ObjectParameter("payment_type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarShipmentId>("GetShipmentIdForInvoice", ship_nameParameter, supp_nameParameter, freight_nameParameter, sh_totalParameter, service_chargesParameter, shipment_typeParameter, currencyParameter, supp_remarksParameter, payment_typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarSupplierNameWithShipmentName> ShowSupplierNameWithShipmentName()
        {
            return base.ExecuteFunction<ScalarSupplierNameWithShipmentName>("ShowSupplierNameWithShipmentName");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderId">No Metadata Documentation available.</param>
        /// <param name="productName">No Metadata Documentation available.</param>
        /// <param name="prd_sp">No Metadata Documentation available.</param>
        /// <param name="prd_quan">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="total">No Metadata Documentation available.</param>
        public int InsertOrderProducts(Nullable<global::System.Int32> orderId, global::System.String productName, Nullable<global::System.Double> prd_sp, Nullable<global::System.Int32> prd_quan, global::System.String currency, Nullable<global::System.Double> total)
        {
            ObjectParameter orderIdParameter;
            if (orderId.HasValue)
            {
                orderIdParameter = new ObjectParameter("OrderId", orderId);
            }
            else
            {
                orderIdParameter = new ObjectParameter("OrderId", typeof(global::System.Int32));
            }
    
            ObjectParameter productNameParameter;
            if (productName != null)
            {
                productNameParameter = new ObjectParameter("ProductName", productName);
            }
            else
            {
                productNameParameter = new ObjectParameter("ProductName", typeof(global::System.String));
            }
    
            ObjectParameter prd_spParameter;
            if (prd_sp.HasValue)
            {
                prd_spParameter = new ObjectParameter("Prd_sp", prd_sp);
            }
            else
            {
                prd_spParameter = new ObjectParameter("Prd_sp", typeof(global::System.Double));
            }
    
            ObjectParameter prd_quanParameter;
            if (prd_quan.HasValue)
            {
                prd_quanParameter = new ObjectParameter("prd_quan", prd_quan);
            }
            else
            {
                prd_quanParameter = new ObjectParameter("prd_quan", typeof(global::System.Int32));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            ObjectParameter totalParameter;
            if (total.HasValue)
            {
                totalParameter = new ObjectParameter("total", total);
            }
            else
            {
                totalParameter = new ObjectParameter("total", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("InsertOrderProducts", orderIdParameter, productNameParameter, prd_spParameter, prd_quanParameter, currencyParameter, totalParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderId">No Metadata Documentation available.</param>
        public ObjectResult<ComplexOrderDetails> ShowOrderDetails(Nullable<global::System.Int32> orderId)
        {
            ObjectParameter orderIdParameter;
            if (orderId.HasValue)
            {
                orderIdParameter = new ObjectParameter("orderId", orderId);
            }
            else
            {
                orderIdParameter = new ObjectParameter("orderId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ComplexOrderDetails>("ShowOrderDetails", orderIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="buyerName">No Metadata Documentation available.</param>
        /// <param name="orderName">No Metadata Documentation available.</param>
        /// <param name="orderTotal">No Metadata Documentation available.</param>
        /// <param name="orderRef">No Metadata Documentation available.</param>
        public ObjectResult<ScalarOrderID> ShowOrderID(global::System.String buyerName, global::System.String orderName, Nullable<global::System.Double> orderTotal, global::System.String orderRef)
        {
            ObjectParameter buyerNameParameter;
            if (buyerName != null)
            {
                buyerNameParameter = new ObjectParameter("buyerName", buyerName);
            }
            else
            {
                buyerNameParameter = new ObjectParameter("buyerName", typeof(global::System.String));
            }
    
            ObjectParameter orderNameParameter;
            if (orderName != null)
            {
                orderNameParameter = new ObjectParameter("orderName", orderName);
            }
            else
            {
                orderNameParameter = new ObjectParameter("orderName", typeof(global::System.String));
            }
    
            ObjectParameter orderTotalParameter;
            if (orderTotal.HasValue)
            {
                orderTotalParameter = new ObjectParameter("orderTotal", orderTotal);
            }
            else
            {
                orderTotalParameter = new ObjectParameter("orderTotal", typeof(global::System.Double));
            }
    
            ObjectParameter orderRefParameter;
            if (orderRef != null)
            {
                orderRefParameter = new ObjectParameter("orderRef", orderRef);
            }
            else
            {
                orderRefParameter = new ObjectParameter("orderRef", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarOrderID>("ShowOrderID", buyerNameParameter, orderNameParameter, orderTotalParameter, orderRefParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderId">No Metadata Documentation available.</param>
        /// <param name="buyername">No Metadata Documentation available.</param>
        /// <param name="order_name">No Metadata Documentation available.</param>
        /// <param name="order_date">No Metadata Documentation available.</param>
        /// <param name="order_total">No Metadata Documentation available.</param>
        /// <param name="required_date">No Metadata Documentation available.</param>
        /// <param name="shipped_date">No Metadata Documentation available.</param>
        /// <param name="ref">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int UpdateOrder(Nullable<global::System.Int32> orderId, global::System.String buyername, global::System.String order_name, Nullable<global::System.DateTime> order_date, Nullable<global::System.Double> order_total, Nullable<global::System.DateTime> required_date, Nullable<global::System.DateTime> shipped_date, global::System.String @ref, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter orderIdParameter;
            if (orderId.HasValue)
            {
                orderIdParameter = new ObjectParameter("orderId", orderId);
            }
            else
            {
                orderIdParameter = new ObjectParameter("orderId", typeof(global::System.Int32));
            }
    
            ObjectParameter buyernameParameter;
            if (buyername != null)
            {
                buyernameParameter = new ObjectParameter("buyername", buyername);
            }
            else
            {
                buyernameParameter = new ObjectParameter("buyername", typeof(global::System.String));
            }
    
            ObjectParameter order_nameParameter;
            if (order_name != null)
            {
                order_nameParameter = new ObjectParameter("order_name", order_name);
            }
            else
            {
                order_nameParameter = new ObjectParameter("order_name", typeof(global::System.String));
            }
    
            ObjectParameter order_dateParameter;
            if (order_date.HasValue)
            {
                order_dateParameter = new ObjectParameter("order_date", order_date);
            }
            else
            {
                order_dateParameter = new ObjectParameter("order_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter order_totalParameter;
            if (order_total.HasValue)
            {
                order_totalParameter = new ObjectParameter("order_total", order_total);
            }
            else
            {
                order_totalParameter = new ObjectParameter("order_total", typeof(global::System.Double));
            }
    
            ObjectParameter required_dateParameter;
            if (required_date.HasValue)
            {
                required_dateParameter = new ObjectParameter("required_date", required_date);
            }
            else
            {
                required_dateParameter = new ObjectParameter("required_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter shipped_dateParameter;
            if (shipped_date.HasValue)
            {
                shipped_dateParameter = new ObjectParameter("shipped_date", shipped_date);
            }
            else
            {
                shipped_dateParameter = new ObjectParameter("shipped_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter refParameter;
            if (@ref != null)
            {
                refParameter = new ObjectParameter("ref", @ref);
            }
            else
            {
                refParameter = new ObjectParameter("ref", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UpdateOrder", orderIdParameter, buyernameParameter, order_nameParameter, order_dateParameter, order_totalParameter, required_dateParameter, shipped_dateParameter, refParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarBuyerNameWithOrderName> ShowBuyerNameWithOrderName()
        {
            return base.ExecuteFunction<ScalarBuyerNameWithOrderName>("ShowBuyerNameWithOrderName");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="prd_name">No Metadata Documentation available.</param>
        public ObjectResult<ScalarProductQuantity> CheckProductInInventory(global::System.String prd_name)
        {
            ObjectParameter prd_nameParameter;
            if (prd_name != null)
            {
                prd_nameParameter = new ObjectParameter("prd_name", prd_name);
            }
            else
            {
                prd_nameParameter = new ObjectParameter("prd_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarProductQuantity>("CheckProductInInventory", prd_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ship_name">No Metadata Documentation available.</param>
        /// <param name="supp_remarks">No Metadata Documentation available.</param>
        /// <param name="buyer_name">No Metadata Documentation available.</param>
        /// <param name="payment_type">No Metadata Documentation available.</param>
        /// <param name="sh_total">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        /// <param name="order_name">No Metadata Documentation available.</param>
        /// <param name="service_charges">No Metadata Documentation available.</param>
        /// <param name="currency_name">No Metadata Documentation available.</param>
        /// <param name="invoice_ref">No Metadata Documentation available.</param>
        /// <param name="order_id">No Metadata Documentation available.</param>
        /// <param name="currency_invoice">No Metadata Documentation available.</param>
        /// <param name="invoice_total">No Metadata Documentation available.</param>
        /// <param name="ex_rate">No Metadata Documentation available.</param>
        public int InsertShipmentOrderWithInvoice(global::System.String ship_name, global::System.String supp_remarks, global::System.String buyer_name, global::System.String payment_type, Nullable<global::System.Double> sh_total, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date, global::System.String order_name, Nullable<global::System.Double> service_charges, global::System.String currency_name, global::System.String invoice_ref, Nullable<global::System.Int32> order_id, global::System.String currency_invoice, Nullable<global::System.Double> invoice_total, Nullable<global::System.Double> ex_rate)
        {
            ObjectParameter ship_nameParameter;
            if (ship_name != null)
            {
                ship_nameParameter = new ObjectParameter("ship_name", ship_name);
            }
            else
            {
                ship_nameParameter = new ObjectParameter("ship_name", typeof(global::System.String));
            }
    
            ObjectParameter supp_remarksParameter;
            if (supp_remarks != null)
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", supp_remarks);
            }
            else
            {
                supp_remarksParameter = new ObjectParameter("supp_remarks", typeof(global::System.String));
            }
    
            ObjectParameter buyer_nameParameter;
            if (buyer_name != null)
            {
                buyer_nameParameter = new ObjectParameter("buyer_name", buyer_name);
            }
            else
            {
                buyer_nameParameter = new ObjectParameter("buyer_name", typeof(global::System.String));
            }
    
            ObjectParameter payment_typeParameter;
            if (payment_type != null)
            {
                payment_typeParameter = new ObjectParameter("payment_type", payment_type);
            }
            else
            {
                payment_typeParameter = new ObjectParameter("payment_type", typeof(global::System.String));
            }
    
            ObjectParameter sh_totalParameter;
            if (sh_total.HasValue)
            {
                sh_totalParameter = new ObjectParameter("sh_total", sh_total);
            }
            else
            {
                sh_totalParameter = new ObjectParameter("sh_total", typeof(global::System.Double));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter order_nameParameter;
            if (order_name != null)
            {
                order_nameParameter = new ObjectParameter("order_name", order_name);
            }
            else
            {
                order_nameParameter = new ObjectParameter("order_name", typeof(global::System.String));
            }
    
            ObjectParameter service_chargesParameter;
            if (service_charges.HasValue)
            {
                service_chargesParameter = new ObjectParameter("service_charges", service_charges);
            }
            else
            {
                service_chargesParameter = new ObjectParameter("service_charges", typeof(global::System.Double));
            }
    
            ObjectParameter currency_nameParameter;
            if (currency_name != null)
            {
                currency_nameParameter = new ObjectParameter("currency_name", currency_name);
            }
            else
            {
                currency_nameParameter = new ObjectParameter("currency_name", typeof(global::System.String));
            }
    
            ObjectParameter invoice_refParameter;
            if (invoice_ref != null)
            {
                invoice_refParameter = new ObjectParameter("invoice_ref", invoice_ref);
            }
            else
            {
                invoice_refParameter = new ObjectParameter("invoice_ref", typeof(global::System.String));
            }
    
            ObjectParameter order_idParameter;
            if (order_id.HasValue)
            {
                order_idParameter = new ObjectParameter("order_id", order_id);
            }
            else
            {
                order_idParameter = new ObjectParameter("order_id", typeof(global::System.Int32));
            }
    
            ObjectParameter currency_invoiceParameter;
            if (currency_invoice != null)
            {
                currency_invoiceParameter = new ObjectParameter("currency_invoice", currency_invoice);
            }
            else
            {
                currency_invoiceParameter = new ObjectParameter("currency_invoice", typeof(global::System.String));
            }
    
            ObjectParameter invoice_totalParameter;
            if (invoice_total.HasValue)
            {
                invoice_totalParameter = new ObjectParameter("invoice_total", invoice_total);
            }
            else
            {
                invoice_totalParameter = new ObjectParameter("invoice_total", typeof(global::System.Double));
            }
    
            ObjectParameter ex_rateParameter;
            if (ex_rate.HasValue)
            {
                ex_rateParameter = new ObjectParameter("ex_rate", ex_rate);
            }
            else
            {
                ex_rateParameter = new ObjectParameter("ex_rate", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("InsertShipmentOrderWithInvoice", ship_nameParameter, supp_remarksParameter, buyer_nameParameter, payment_typeParameter, sh_totalParameter, e_dateParameter, m_dateParameter, order_nameParameter, service_chargesParameter, currency_nameParameter, invoice_refParameter, order_idParameter, currency_invoiceParameter, invoice_totalParameter, ex_rateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shipId">No Metadata Documentation available.</param>
        /// <param name="prdName">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="unitsInventory">No Metadata Documentation available.</param>
        /// <param name="units">No Metadata Documentation available.</param>
        /// <param name="prd_cp">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        /// <param name="prdInventory_Id">No Metadata Documentation available.</param>
        public int InsertOrderInventory(Nullable<global::System.Int32> shipId, global::System.String prdName, global::System.String currency, Nullable<global::System.Int32> unitsInventory, Nullable<global::System.Int32> units, Nullable<global::System.Double> prd_cp, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date, Nullable<global::System.Int32> prdInventory_Id)
        {
            ObjectParameter shipIdParameter;
            if (shipId.HasValue)
            {
                shipIdParameter = new ObjectParameter("ShipId", shipId);
            }
            else
            {
                shipIdParameter = new ObjectParameter("ShipId", typeof(global::System.Int32));
            }
    
            ObjectParameter prdNameParameter;
            if (prdName != null)
            {
                prdNameParameter = new ObjectParameter("PrdName", prdName);
            }
            else
            {
                prdNameParameter = new ObjectParameter("PrdName", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            ObjectParameter unitsInventoryParameter;
            if (unitsInventory.HasValue)
            {
                unitsInventoryParameter = new ObjectParameter("unitsInventory", unitsInventory);
            }
            else
            {
                unitsInventoryParameter = new ObjectParameter("unitsInventory", typeof(global::System.Int32));
            }
    
            ObjectParameter unitsParameter;
            if (units.HasValue)
            {
                unitsParameter = new ObjectParameter("Units", units);
            }
            else
            {
                unitsParameter = new ObjectParameter("Units", typeof(global::System.Int32));
            }
    
            ObjectParameter prd_cpParameter;
            if (prd_cp.HasValue)
            {
                prd_cpParameter = new ObjectParameter("prd_cp", prd_cp);
            }
            else
            {
                prd_cpParameter = new ObjectParameter("prd_cp", typeof(global::System.Double));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter prdInventory_IdParameter;
            if (prdInventory_Id.HasValue)
            {
                prdInventory_IdParameter = new ObjectParameter("PrdInventory_Id", prdInventory_Id);
            }
            else
            {
                prdInventory_IdParameter = new ObjectParameter("PrdInventory_Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertOrderInventory", shipIdParameter, prdNameParameter, currencyParameter, unitsInventoryParameter, unitsParameter, prd_cpParameter, e_dateParameter, m_dateParameter, prdInventory_IdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shipmentName">No Metadata Documentation available.</param>
        /// <param name="orderId">No Metadata Documentation available.</param>
        public ObjectResult<ScalarShipmentOrderID> ShowShipmentIDForOrders(global::System.String shipmentName, Nullable<global::System.Int32> orderId)
        {
            ObjectParameter shipmentNameParameter;
            if (shipmentName != null)
            {
                shipmentNameParameter = new ObjectParameter("shipmentName", shipmentName);
            }
            else
            {
                shipmentNameParameter = new ObjectParameter("shipmentName", typeof(global::System.String));
            }
    
            ObjectParameter orderIdParameter;
            if (orderId.HasValue)
            {
                orderIdParameter = new ObjectParameter("orderId", orderId);
            }
            else
            {
                orderIdParameter = new ObjectParameter("orderId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ScalarShipmentOrderID>("ShowShipmentIDForOrders", shipmentNameParameter, orderIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<scalarBuyerNameOrderNameInvoice> ShowBuyerNameWithOrderNameWithShipmentNameForInvoice()
        {
            return base.ExecuteFunction<scalarBuyerNameOrderNameInvoice>("ShowBuyerNameWithOrderNameWithShipmentNameForInvoice");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarAccountType> ShowLedgers()
        {
            return base.ExecuteFunction<ScalarAccountType>("ShowLedgers");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<ScalarAccountName> CheckNameOfAccounts(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarAccountName>("CheckNameOfAccounts", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="num">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        public int InsertCharOfAccount(global::System.String num, global::System.String name, global::System.String type, Nullable<global::System.DateTime> e_date)
        {
            ObjectParameter numParameter;
            if (num != null)
            {
                numParameter = new ObjectParameter("num", num);
            }
            else
            {
                numParameter = new ObjectParameter("num", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertCharOfAccount", numParameter, nameParameter, typeParameter, e_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteChartOfAccounts(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteChartOfAccounts", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexChartOfAccounts> ShowChartOfAccounts()
        {
            return base.ExecuteFunction<ComplexChartOfAccounts>("ShowChartOfAccounts");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<ScalarAccountID> GetAccountID(global::System.String type)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ScalarAccountID>("GetAccountID", typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="acc_no">No Metadata Documentation available.</param>
        /// <param name="acc_name">No Metadata Documentation available.</param>
        /// <param name="acc_type">No Metadata Documentation available.</param>
        /// <param name="acc_balance">No Metadata Documentation available.</param>
        /// <param name="acc_branch">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="branch_code">No Metadata Documentation available.</param>
        /// <param name="bank_no">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="bank_email">No Metadata Documentation available.</param>
        /// <param name="e_date">No Metadata Documentation available.</param>
        /// <param name="m_date">No Metadata Documentation available.</param>
        public int InsertBank(global::System.String acc_no, global::System.String acc_name, global::System.String acc_type, Nullable<global::System.Double> acc_balance, global::System.String acc_branch, global::System.String address, global::System.String branch_code, global::System.String bank_no, global::System.String cURRENCY, global::System.String bank_email, Nullable<global::System.DateTime> e_date, Nullable<global::System.DateTime> m_date)
        {
            ObjectParameter acc_noParameter;
            if (acc_no != null)
            {
                acc_noParameter = new ObjectParameter("acc_no", acc_no);
            }
            else
            {
                acc_noParameter = new ObjectParameter("acc_no", typeof(global::System.String));
            }
    
            ObjectParameter acc_nameParameter;
            if (acc_name != null)
            {
                acc_nameParameter = new ObjectParameter("acc_name", acc_name);
            }
            else
            {
                acc_nameParameter = new ObjectParameter("acc_name", typeof(global::System.String));
            }
    
            ObjectParameter acc_typeParameter;
            if (acc_type != null)
            {
                acc_typeParameter = new ObjectParameter("acc_type", acc_type);
            }
            else
            {
                acc_typeParameter = new ObjectParameter("acc_type", typeof(global::System.String));
            }
    
            ObjectParameter acc_balanceParameter;
            if (acc_balance.HasValue)
            {
                acc_balanceParameter = new ObjectParameter("acc_balance", acc_balance);
            }
            else
            {
                acc_balanceParameter = new ObjectParameter("acc_balance", typeof(global::System.Double));
            }
    
            ObjectParameter acc_branchParameter;
            if (acc_branch != null)
            {
                acc_branchParameter = new ObjectParameter("acc_branch", acc_branch);
            }
            else
            {
                acc_branchParameter = new ObjectParameter("acc_branch", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter branch_codeParameter;
            if (branch_code != null)
            {
                branch_codeParameter = new ObjectParameter("branch_code", branch_code);
            }
            else
            {
                branch_codeParameter = new ObjectParameter("branch_code", typeof(global::System.String));
            }
    
            ObjectParameter bank_noParameter;
            if (bank_no != null)
            {
                bank_noParameter = new ObjectParameter("bank_no", bank_no);
            }
            else
            {
                bank_noParameter = new ObjectParameter("bank_no", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter bank_emailParameter;
            if (bank_email != null)
            {
                bank_emailParameter = new ObjectParameter("bank_email", bank_email);
            }
            else
            {
                bank_emailParameter = new ObjectParameter("bank_email", typeof(global::System.String));
            }
    
            ObjectParameter e_dateParameter;
            if (e_date.HasValue)
            {
                e_dateParameter = new ObjectParameter("e_date", e_date);
            }
            else
            {
                e_dateParameter = new ObjectParameter("e_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter m_dateParameter;
            if (m_date.HasValue)
            {
                m_dateParameter = new ObjectParameter("m_date", m_date);
            }
            else
            {
                m_dateParameter = new ObjectParameter("m_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertBank", acc_noParameter, acc_nameParameter, acc_typeParameter, acc_balanceParameter, acc_branchParameter, addressParameter, branch_codeParameter, bank_noParameter, cURRENCYParameter, bank_emailParameter, e_dateParameter, m_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<complexbank> ShowBank()
        {
            return base.ExecuteFunction<complexbank>("ShowBank");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteBank(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBank", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoice_id">No Metadata Documentation available.</param>
        /// <param name="payment">No Metadata Documentation available.</param>
        /// <param name="account_id">No Metadata Documentation available.</param>
        /// <param name="payment_type">No Metadata Documentation available.</param>
        /// <param name="payment_no">No Metadata Documentation available.</param>
        public int PaymentOfShipmentOrder(Nullable<global::System.Int32> invoice_id, Nullable<global::System.Double> payment, Nullable<global::System.Int32> account_id, global::System.String payment_type, global::System.String payment_no)
        {
            ObjectParameter invoice_idParameter;
            if (invoice_id.HasValue)
            {
                invoice_idParameter = new ObjectParameter("invoice_id", invoice_id);
            }
            else
            {
                invoice_idParameter = new ObjectParameter("invoice_id", typeof(global::System.Int32));
            }
    
            ObjectParameter paymentParameter;
            if (payment.HasValue)
            {
                paymentParameter = new ObjectParameter("payment", payment);
            }
            else
            {
                paymentParameter = new ObjectParameter("payment", typeof(global::System.Double));
            }
    
            ObjectParameter account_idParameter;
            if (account_id.HasValue)
            {
                account_idParameter = new ObjectParameter("account_id", account_id);
            }
            else
            {
                account_idParameter = new ObjectParameter("account_id", typeof(global::System.Int32));
            }
    
            ObjectParameter payment_typeParameter;
            if (payment_type != null)
            {
                payment_typeParameter = new ObjectParameter("payment_type", payment_type);
            }
            else
            {
                payment_typeParameter = new ObjectParameter("payment_type", typeof(global::System.String));
            }
    
            ObjectParameter payment_noParameter;
            if (payment_no != null)
            {
                payment_noParameter = new ObjectParameter("payment_no", payment_no);
            }
            else
            {
                payment_noParameter = new ObjectParameter("payment_no", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("PaymentOfShipmentOrder", invoice_idParameter, paymentParameter, account_idParameter, payment_typeParameter, payment_noParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoice_id">No Metadata Documentation available.</param>
        /// <param name="payment">No Metadata Documentation available.</param>
        /// <param name="account_id">No Metadata Documentation available.</param>
        /// <param name="payment_type">No Metadata Documentation available.</param>
        /// <param name="payment_no">No Metadata Documentation available.</param>
        public int PaymentOfShipmentSupplier(Nullable<global::System.Int32> invoice_id, Nullable<global::System.Double> payment, Nullable<global::System.Int32> account_id, global::System.String payment_type, global::System.String payment_no)
        {
            ObjectParameter invoice_idParameter;
            if (invoice_id.HasValue)
            {
                invoice_idParameter = new ObjectParameter("invoice_id", invoice_id);
            }
            else
            {
                invoice_idParameter = new ObjectParameter("invoice_id", typeof(global::System.Int32));
            }
    
            ObjectParameter paymentParameter;
            if (payment.HasValue)
            {
                paymentParameter = new ObjectParameter("payment", payment);
            }
            else
            {
                paymentParameter = new ObjectParameter("payment", typeof(global::System.Double));
            }
    
            ObjectParameter account_idParameter;
            if (account_id.HasValue)
            {
                account_idParameter = new ObjectParameter("account_id", account_id);
            }
            else
            {
                account_idParameter = new ObjectParameter("account_id", typeof(global::System.Int32));
            }
    
            ObjectParameter payment_typeParameter;
            if (payment_type != null)
            {
                payment_typeParameter = new ObjectParameter("payment_type", payment_type);
            }
            else
            {
                payment_typeParameter = new ObjectParameter("payment_type", typeof(global::System.String));
            }
    
            ObjectParameter payment_noParameter;
            if (payment_no != null)
            {
                payment_noParameter = new ObjectParameter("payment_no", payment_no);
            }
            else
            {
                payment_noParameter = new ObjectParameter("payment_no", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("PaymentOfShipmentSupplier", invoice_idParameter, paymentParameter, account_idParameter, payment_typeParameter, payment_noParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexInvoicesBuyer> ShowInvoicesBuyer()
        {
            return base.ExecuteFunction<ComplexInvoicesBuyer>("ShowInvoicesBuyer");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceId">No Metadata Documentation available.</param>
        public ObjectResult<ComplexOrderPayments> ShowOrderPayments(Nullable<global::System.Int32> invoiceId)
        {
            ObjectParameter invoiceIdParameter;
            if (invoiceId.HasValue)
            {
                invoiceIdParameter = new ObjectParameter("InvoiceId", invoiceId);
            }
            else
            {
                invoiceIdParameter = new ObjectParameter("InvoiceId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ComplexOrderPayments>("ShowOrderPayments", invoiceIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderId">No Metadata Documentation available.</param>
        public ObjectResult<ComplexOrderDetailPayments> ShowOrderDetailsPayments(Nullable<global::System.Int32> orderId)
        {
            ObjectParameter orderIdParameter;
            if (orderId.HasValue)
            {
                orderIdParameter = new ObjectParameter("OrderId", orderId);
            }
            else
            {
                orderIdParameter = new ObjectParameter("OrderId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ComplexOrderDetailPayments>("ShowOrderDetailsPayments", orderIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexInvoicesSupplier> ShowInvoicesSupplier()
        {
            return base.ExecuteFunction<ComplexInvoicesSupplier>("ShowInvoicesSupplier");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceId">No Metadata Documentation available.</param>
        public ObjectResult<ComplexInvoiceSupplierDetails> ShowInvoiceSupplierDetails(Nullable<global::System.Int32> invoiceId)
        {
            ObjectParameter invoiceIdParameter;
            if (invoiceId.HasValue)
            {
                invoiceIdParameter = new ObjectParameter("invoiceId", invoiceId);
            }
            else
            {
                invoiceIdParameter = new ObjectParameter("invoiceId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ComplexInvoiceSupplierDetails>("ShowInvoiceSupplierDetails", invoiceIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="aCCiD">No Metadata Documentation available.</param>
        /// <param name="acc_num">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="des">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="eDate">No Metadata Documentation available.</param>
        public int InsertJournalAndPostings(Nullable<global::System.Int32> aCCiD, global::System.String acc_num, Nullable<global::System.Double> amount, global::System.String des, global::System.String type, Nullable<global::System.DateTime> eDate)
        {
            ObjectParameter aCCiDParameter;
            if (aCCiD.HasValue)
            {
                aCCiDParameter = new ObjectParameter("ACCiD", aCCiD);
            }
            else
            {
                aCCiDParameter = new ObjectParameter("ACCiD", typeof(global::System.Int32));
            }
    
            ObjectParameter acc_numParameter;
            if (acc_num != null)
            {
                acc_numParameter = new ObjectParameter("acc_num", acc_num);
            }
            else
            {
                acc_numParameter = new ObjectParameter("acc_num", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Double));
            }
    
            ObjectParameter desParameter;
            if (des != null)
            {
                desParameter = new ObjectParameter("Des", des);
            }
            else
            {
                desParameter = new ObjectParameter("Des", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter eDateParameter;
            if (eDate.HasValue)
            {
                eDateParameter = new ObjectParameter("eDate", eDate);
            }
            else
            {
                eDateParameter = new ObjectParameter("eDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertJournalAndPostings", aCCiDParameter, acc_numParameter, amountParameter, desParameter, typeParameter, eDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="from_n">No Metadata Documentation available.</param>
        /// <param name="to_n">No Metadata Documentation available.</param>
        /// <param name="to">No Metadata Documentation available.</param>
        public int InsertFiscalYear(Nullable<global::System.DateTime> from_n, Nullable<global::System.DateTime> to_n, Nullable<global::System.DateTime> to)
        {
            ObjectParameter from_nParameter;
            if (from_n.HasValue)
            {
                from_nParameter = new ObjectParameter("from_n", from_n);
            }
            else
            {
                from_nParameter = new ObjectParameter("from_n", typeof(global::System.DateTime));
            }
    
            ObjectParameter to_nParameter;
            if (to_n.HasValue)
            {
                to_nParameter = new ObjectParameter("to_n", to_n);
            }
            else
            {
                to_nParameter = new ObjectParameter("to_n", typeof(global::System.DateTime));
            }
    
            ObjectParameter toParameter;
            if (to.HasValue)
            {
                toParameter = new ObjectParameter("to", to);
            }
            else
            {
                toParameter = new ObjectParameter("to", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("InsertFiscalYear", from_nParameter, to_nParameter, toParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="to">No Metadata Documentation available.</param>
        public int UpdateFiscalYear(Nullable<global::System.DateTime> to)
        {
            ObjectParameter toParameter;
            if (to.HasValue)
            {
                toParameter = new ObjectParameter("to", to);
            }
            else
            {
                toParameter = new ObjectParameter("to", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UpdateFiscalYear", toParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ComplexFiscalYear> ShowFiscalYear()
        {
            return base.ExecuteFunction<ComplexFiscalYear>("ShowFiscalYear");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="aCCID">No Metadata Documentation available.</param>
        /// <param name="tYPEOFTRANSACTION">No Metadata Documentation available.</param>
        /// <param name="rEFRENCE">No Metadata Documentation available.</param>
        /// <param name="tOTAL">No Metadata Documentation available.</param>
        /// <param name="e_DATE">No Metadata Documentation available.</param>
        /// <param name="pAYMENT">No Metadata Documentation available.</param>
        public int AccountTransaction(Nullable<global::System.Int32> aCCID, global::System.String tYPEOFTRANSACTION, global::System.String rEFRENCE, Nullable<global::System.Double> tOTAL, Nullable<global::System.DateTime> e_DATE, Nullable<global::System.Double> pAYMENT)
        {
            ObjectParameter aCCIDParameter;
            if (aCCID.HasValue)
            {
                aCCIDParameter = new ObjectParameter("ACCID", aCCID);
            }
            else
            {
                aCCIDParameter = new ObjectParameter("ACCID", typeof(global::System.Int32));
            }
    
            ObjectParameter tYPEOFTRANSACTIONParameter;
            if (tYPEOFTRANSACTION != null)
            {
                tYPEOFTRANSACTIONParameter = new ObjectParameter("TYPEOFTRANSACTION", tYPEOFTRANSACTION);
            }
            else
            {
                tYPEOFTRANSACTIONParameter = new ObjectParameter("TYPEOFTRANSACTION", typeof(global::System.String));
            }
    
            ObjectParameter rEFRENCEParameter;
            if (rEFRENCE != null)
            {
                rEFRENCEParameter = new ObjectParameter("REFRENCE", rEFRENCE);
            }
            else
            {
                rEFRENCEParameter = new ObjectParameter("REFRENCE", typeof(global::System.String));
            }
    
            ObjectParameter tOTALParameter;
            if (tOTAL.HasValue)
            {
                tOTALParameter = new ObjectParameter("TOTAL", tOTAL);
            }
            else
            {
                tOTALParameter = new ObjectParameter("TOTAL", typeof(global::System.Double));
            }
    
            ObjectParameter e_DATEParameter;
            if (e_DATE.HasValue)
            {
                e_DATEParameter = new ObjectParameter("E_DATE", e_DATE);
            }
            else
            {
                e_DATEParameter = new ObjectParameter("E_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter pAYMENTParameter;
            if (pAYMENT.HasValue)
            {
                pAYMENTParameter = new ObjectParameter("PAYMENT", pAYMENT);
            }
            else
            {
                pAYMENTParameter = new ObjectParameter("PAYMENT", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("AccountTransaction", aCCIDParameter, tYPEOFTRANSACTIONParameter, rEFRENCEParameter, tOTALParameter, e_DATEParameter, pAYMENTParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceId">No Metadata Documentation available.</param>
        /// <param name="newAmount">No Metadata Documentation available.</param>
        /// <param name="accID">No Metadata Documentation available.</param>
        /// <param name="newBalance">No Metadata Documentation available.</param>
        /// <param name="checktran">No Metadata Documentation available.</param>
        /// <param name="exrate">No Metadata Documentation available.</param>
        /// <param name="pAID">No Metadata Documentation available.</param>
        public int RefundInvoice(Nullable<global::System.Int32> invoiceId, Nullable<global::System.Double> newAmount, Nullable<global::System.Int32> accID, Nullable<global::System.Double> newBalance, global::System.String checktran, Nullable<global::System.Double> exrate, Nullable<global::System.Double> pAID)
        {
            ObjectParameter invoiceIdParameter;
            if (invoiceId.HasValue)
            {
                invoiceIdParameter = new ObjectParameter("invoiceId", invoiceId);
            }
            else
            {
                invoiceIdParameter = new ObjectParameter("invoiceId", typeof(global::System.Int32));
            }
    
            ObjectParameter newAmountParameter;
            if (newAmount.HasValue)
            {
                newAmountParameter = new ObjectParameter("newAmount", newAmount);
            }
            else
            {
                newAmountParameter = new ObjectParameter("newAmount", typeof(global::System.Double));
            }
    
            ObjectParameter accIDParameter;
            if (accID.HasValue)
            {
                accIDParameter = new ObjectParameter("accID", accID);
            }
            else
            {
                accIDParameter = new ObjectParameter("accID", typeof(global::System.Int32));
            }
    
            ObjectParameter newBalanceParameter;
            if (newBalance.HasValue)
            {
                newBalanceParameter = new ObjectParameter("newBalance", newBalance);
            }
            else
            {
                newBalanceParameter = new ObjectParameter("newBalance", typeof(global::System.Double));
            }
    
            ObjectParameter checktranParameter;
            if (checktran != null)
            {
                checktranParameter = new ObjectParameter("checktran", checktran);
            }
            else
            {
                checktranParameter = new ObjectParameter("checktran", typeof(global::System.String));
            }
    
            ObjectParameter exrateParameter;
            if (exrate.HasValue)
            {
                exrateParameter = new ObjectParameter("exrate", exrate);
            }
            else
            {
                exrateParameter = new ObjectParameter("exrate", typeof(global::System.Double));
            }
    
            ObjectParameter pAIDParameter;
            if (pAID.HasValue)
            {
                pAIDParameter = new ObjectParameter("PAID", pAID);
            }
            else
            {
                pAIDParameter = new ObjectParameter("PAID", typeof(global::System.Double));
            }
    
            return base.ExecuteFunction("RefundInvoice", invoiceIdParameter, newAmountParameter, accIDParameter, newBalanceParameter, checktranParameter, exrateParameter, pAIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceId">No Metadata Documentation available.</param>
        /// <param name="packLisg">No Metadata Documentation available.</param>
        public int InsertPackingList(Nullable<global::System.Int32> invoiceId, global::System.String packLisg)
        {
            ObjectParameter invoiceIdParameter;
            if (invoiceId.HasValue)
            {
                invoiceIdParameter = new ObjectParameter("invoiceId", invoiceId);
            }
            else
            {
                invoiceIdParameter = new ObjectParameter("invoiceId", typeof(global::System.Int32));
            }
    
            ObjectParameter packLisgParameter;
            if (packLisg != null)
            {
                packLisgParameter = new ObjectParameter("PackLisg", packLisg);
            }
            else
            {
                packLisgParameter = new ObjectParameter("PackLisg", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertPackingList", invoiceIdParameter, packLisgParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ScalarPackingList> ShowPackingList()
        {
            return base.ExecuteFunction<ScalarPackingList>("ShowPackingList");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pck">No Metadata Documentation available.</param>
        public ObjectResult<ComplexProductsOfPackingList> ShowProductsOfPackingList(global::System.String pck)
        {
            ObjectParameter pckParameter;
            if (pck != null)
            {
                pckParameter = new ObjectParameter("pck", pck);
            }
            else
            {
                pckParameter = new ObjectParameter("pck", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ComplexProductsOfPackingList>("ShowProductsOfPackingList", pckParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fROM">No Metadata Documentation available.</param>
        /// <param name="tO">No Metadata Documentation available.</param>
        public ObjectResult<ComplexInventoryGrid> InventoryFilter(Nullable<global::System.DateTime> fROM, Nullable<global::System.DateTime> tO)
        {
            ObjectParameter fROMParameter;
            if (fROM.HasValue)
            {
                fROMParameter = new ObjectParameter("FROM", fROM);
            }
            else
            {
                fROMParameter = new ObjectParameter("FROM", typeof(global::System.DateTime));
            }
    
            ObjectParameter tOParameter;
            if (tO.HasValue)
            {
                tOParameter = new ObjectParameter("TO", tO);
            }
            else
            {
                tOParameter = new ObjectParameter("TO", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<ComplexInventoryGrid>("InventoryFilter", fROMParameter, tOParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Account_Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account_Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account_Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Account_Transaction CreateAccount_Transaction(global::System.Int32 id)
        {
            Account_Transaction account_Transaction = new Account_Transaction();
            account_Transaction.id = id;
            return account_Transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Acc_id
        {
            get
            {
                return _Acc_id;
            }
            set
            {
                OnAcc_idChanging(value);
                ReportPropertyChanging("Acc_id");
                _Acc_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Acc_id");
                OnAcc_idChanged();
            }
        }
        private Nullable<global::System.Int32> _Acc_id;
        partial void OnAcc_idChanging(Nullable<global::System.Int32> value);
        partial void OnAcc_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @ref
        {
            get
            {
                return _ref;
            }
            set
            {
                OnrefChanging(value);
                ReportPropertyChanging("ref");
                _ref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ref");
                OnrefChanged();
            }
        }
        private global::System.String _ref;
        partial void OnrefChanging(global::System.String value);
        partial void OnrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ref_no
        {
            get
            {
                return _ref_no;
            }
            set
            {
                Onref_noChanging(value);
                ReportPropertyChanging("ref_no");
                _ref_no = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ref_no");
                Onref_noChanged();
            }
        }
        private Nullable<global::System.Int32> _ref_no;
        partial void Onref_noChanging(Nullable<global::System.Int32> value);
        partial void Onref_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private Nullable<global::System.Double> _total;
        partial void OntotalChanging(Nullable<global::System.Double> value);
        partial void OntotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> acc_total
        {
            get
            {
                return _acc_total;
            }
            set
            {
                Onacc_totalChanging(value);
                ReportPropertyChanging("acc_total");
                _acc_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acc_total");
                Onacc_totalChanged();
            }
        }
        private Nullable<global::System.Double> _acc_total;
        partial void Onacc_totalChanging(Nullable<global::System.Double> value);
        partial void Onacc_totalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAYMENT
        {
            get
            {
                return _PAYMENT;
            }
            set
            {
                OnPAYMENTChanging(value);
                ReportPropertyChanging("PAYMENT");
                _PAYMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAYMENT");
                OnPAYMENTChanged();
            }
        }
        private global::System.String _PAYMENT;
        partial void OnPAYMENTChanging(global::System.String value);
        partial void OnPAYMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String payment_no
        {
            get
            {
                return _payment_no;
            }
            set
            {
                Onpayment_noChanging(value);
                ReportPropertyChanging("payment_no");
                _payment_no = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("payment_no");
                Onpayment_noChanged();
            }
        }
        private global::System.String _payment_no;
        partial void Onpayment_noChanging(global::System.String value);
        partial void Onpayment_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> debit
        {
            get
            {
                return _debit;
            }
            set
            {
                OndebitChanging(value);
                ReportPropertyChanging("debit");
                _debit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("debit");
                OndebitChanged();
            }
        }
        private Nullable<global::System.Double> _debit;
        partial void OndebitChanging(Nullable<global::System.Double> value);
        partial void OndebitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> credit
        {
            get
            {
                return _credit;
            }
            set
            {
                OncreditChanging(value);
                ReportPropertyChanging("credit");
                _credit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("credit");
                OncreditChanged();
            }
        }
        private Nullable<global::System.Double> _credit;
        partial void OncreditChanging(Nullable<global::System.Double> value);
        partial void OncreditChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Account_Transaction_BANK", "BANK")]
        public BANK BANK
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BANK>("TradingModel.FK_Account_Transaction_BANK", "BANK").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BANK>("TradingModel.FK_Account_Transaction_BANK", "BANK").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BANK> BANKReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BANK>("TradingModel.FK_Account_Transaction_BANK", "BANK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BANK>("TradingModel.FK_Account_Transaction_BANK", "BANK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Account_Transaction_Invoices", "Invoices")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("TradingModel.FK_Account_Transaction_Invoices", "Invoices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("TradingModel.FK_Account_Transaction_Invoices", "Invoices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("TradingModel.FK_Account_Transaction_Invoices", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("TradingModel.FK_Account_Transaction_Invoices", "Invoices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="BANK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BANK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BANK object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static BANK CreateBANK(global::System.Int32 id)
        {
            BANK bANK = new BANK();
            bANK.ID = id;
            return bANK;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACC_NO
        {
            get
            {
                return _ACC_NO;
            }
            set
            {
                OnACC_NOChanging(value);
                ReportPropertyChanging("ACC_NO");
                _ACC_NO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACC_NO");
                OnACC_NOChanged();
            }
        }
        private global::System.String _ACC_NO;
        partial void OnACC_NOChanging(global::System.String value);
        partial void OnACC_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACC_NAME
        {
            get
            {
                return _ACC_NAME;
            }
            set
            {
                OnACC_NAMEChanging(value);
                ReportPropertyChanging("ACC_NAME");
                _ACC_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACC_NAME");
                OnACC_NAMEChanged();
            }
        }
        private global::System.String _ACC_NAME;
        partial void OnACC_NAMEChanging(global::System.String value);
        partial void OnACC_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACC_TYPE
        {
            get
            {
                return _ACC_TYPE;
            }
            set
            {
                OnACC_TYPEChanging(value);
                ReportPropertyChanging("ACC_TYPE");
                _ACC_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACC_TYPE");
                OnACC_TYPEChanged();
            }
        }
        private global::System.String _ACC_TYPE;
        partial void OnACC_TYPEChanging(global::System.String value);
        partial void OnACC_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ACC_BALANCE
        {
            get
            {
                return _ACC_BALANCE;
            }
            set
            {
                OnACC_BALANCEChanging(value);
                ReportPropertyChanging("ACC_BALANCE");
                _ACC_BALANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACC_BALANCE");
                OnACC_BALANCEChanged();
            }
        }
        private Nullable<global::System.Double> _ACC_BALANCE;
        partial void OnACC_BALANCEChanging(Nullable<global::System.Double> value);
        partial void OnACC_BALANCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCH
        {
            get
            {
                return _BRANCH;
            }
            set
            {
                OnBRANCHChanging(value);
                ReportPropertyChanging("BRANCH");
                _BRANCH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCH");
                OnBRANCHChanged();
            }
        }
        private global::System.String _BRANCH;
        partial void OnBRANCHChanging(global::System.String value);
        partial void OnBRANCHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADDRESS
        {
            get
            {
                return _ADDRESS;
            }
            set
            {
                OnADDRESSChanging(value);
                ReportPropertyChanging("ADDRESS");
                _ADDRESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ADDRESS");
                OnADDRESSChanged();
            }
        }
        private global::System.String _ADDRESS;
        partial void OnADDRESSChanging(global::System.String value);
        partial void OnADDRESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCH_CODE
        {
            get
            {
                return _BRANCH_CODE;
            }
            set
            {
                OnBRANCH_CODEChanging(value);
                ReportPropertyChanging("BRANCH_CODE");
                _BRANCH_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCH_CODE");
                OnBRANCH_CODEChanged();
            }
        }
        private global::System.String _BRANCH_CODE;
        partial void OnBRANCH_CODEChanging(global::System.String value);
        partial void OnBRANCH_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BANK_NO
        {
            get
            {
                return _BANK_NO;
            }
            set
            {
                OnBANK_NOChanging(value);
                ReportPropertyChanging("BANK_NO");
                _BANK_NO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BANK_NO");
                OnBANK_NOChanged();
            }
        }
        private global::System.String _BANK_NO;
        partial void OnBANK_NOChanging(global::System.String value);
        partial void OnBANK_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BANK_EMAIL
        {
            get
            {
                return _BANK_EMAIL;
            }
            set
            {
                OnBANK_EMAILChanging(value);
                ReportPropertyChanging("BANK_EMAIL");
                _BANK_EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BANK_EMAIL");
                OnBANK_EMAILChanged();
            }
        }
        private global::System.String _BANK_EMAIL;
        partial void OnBANK_EMAILChanging(global::System.String value);
        partial void OnBANK_EMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> E_DATE
        {
            get
            {
                return _E_DATE;
            }
            set
            {
                OnE_DATEChanging(value);
                ReportPropertyChanging("E_DATE");
                _E_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("E_DATE");
                OnE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _E_DATE;
        partial void OnE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> M_DATE
        {
            get
            {
                return _M_DATE;
            }
            set
            {
                OnM_DATEChanging(value);
                ReportPropertyChanging("M_DATE");
                _M_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("M_DATE");
                OnM_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _M_DATE;
        partial void OnM_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Account_Transaction_BANK", "Account_Transaction")]
        public EntityCollection<Account_Transaction> Account_Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account_Transaction>("TradingModel.FK_Account_Transaction_BANK", "Account_Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account_Transaction>("TradingModel.FK_Account_Transaction_BANK", "Account_Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="BUYER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BUYER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BUYER object.
        /// </summary>
        /// <param name="bUYER_ID">Initial value of the BUYER_ID property.</param>
        public static BUYER CreateBUYER(global::System.Int32 bUYER_ID)
        {
            BUYER bUYER = new BUYER();
            bUYER.BUYER_ID = bUYER_ID;
            return bUYER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BUYER_ID
        {
            get
            {
                return _BUYER_ID;
            }
            set
            {
                if (_BUYER_ID != value)
                {
                    OnBUYER_IDChanging(value);
                    ReportPropertyChanging("BUYER_ID");
                    _BUYER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BUYER_ID");
                    OnBUYER_IDChanged();
                }
            }
        }
        private global::System.Int32 _BUYER_ID;
        partial void OnBUYER_IDChanging(global::System.Int32 value);
        partial void OnBUYER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_NAME
        {
            get
            {
                return _BUYER_NAME;
            }
            set
            {
                OnBUYER_NAMEChanging(value);
                ReportPropertyChanging("BUYER_NAME");
                _BUYER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_NAME");
                OnBUYER_NAMEChanged();
            }
        }
        private global::System.String _BUYER_NAME;
        partial void OnBUYER_NAMEChanging(global::System.String value);
        partial void OnBUYER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_CONTACT
        {
            get
            {
                return _BUYER_CONTACT;
            }
            set
            {
                OnBUYER_CONTACTChanging(value);
                ReportPropertyChanging("BUYER_CONTACT");
                _BUYER_CONTACT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_CONTACT");
                OnBUYER_CONTACTChanged();
            }
        }
        private global::System.String _BUYER_CONTACT;
        partial void OnBUYER_CONTACTChanging(global::System.String value);
        partial void OnBUYER_CONTACTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_EMAIL
        {
            get
            {
                return _BUYER_EMAIL;
            }
            set
            {
                OnBUYER_EMAILChanging(value);
                ReportPropertyChanging("BUYER_EMAIL");
                _BUYER_EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_EMAIL");
                OnBUYER_EMAILChanged();
            }
        }
        private global::System.String _BUYER_EMAIL;
        partial void OnBUYER_EMAILChanging(global::System.String value);
        partial void OnBUYER_EMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_ACCOUNT
        {
            get
            {
                return _BUYER_ACCOUNT;
            }
            set
            {
                OnBUYER_ACCOUNTChanging(value);
                ReportPropertyChanging("BUYER_ACCOUNT");
                _BUYER_ACCOUNT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_ACCOUNT");
                OnBUYER_ACCOUNTChanged();
            }
        }
        private global::System.String _BUYER_ACCOUNT;
        partial void OnBUYER_ACCOUNTChanging(global::System.String value);
        partial void OnBUYER_ACCOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_COMPANY
        {
            get
            {
                return _BUYER_COMPANY;
            }
            set
            {
                OnBUYER_COMPANYChanging(value);
                ReportPropertyChanging("BUYER_COMPANY");
                _BUYER_COMPANY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_COMPANY");
                OnBUYER_COMPANYChanged();
            }
        }
        private global::System.String _BUYER_COMPANY;
        partial void OnBUYER_COMPANYChanging(global::System.String value);
        partial void OnBUYER_COMPANYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_REMARKS
        {
            get
            {
                return _BUYER_REMARKS;
            }
            set
            {
                OnBUYER_REMARKSChanging(value);
                ReportPropertyChanging("BUYER_REMARKS");
                _BUYER_REMARKS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_REMARKS");
                OnBUYER_REMARKSChanged();
            }
        }
        private global::System.String _BUYER_REMARKS;
        partial void OnBUYER_REMARKSChanging(global::System.String value);
        partial void OnBUYER_REMARKSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_ORDER_BUYER", "ORDER")]
        public EntityCollection<ORDER> ORDERs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ORDER>("TradingModel.FK_ORDER_BUYER", "ORDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ORDER>("TradingModel.FK_ORDER_BUYER", "ORDER", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Currency CreateCurrency(global::System.Int32 id)
        {
            Currency currency = new Currency();
            currency.id = id;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Exchange_Currency", "Exchange")]
        public EntityCollection<Exchange> Exchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exchange>("TradingModel.FK_Exchange_Currency", "Exchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exchange>("TradingModel.FK_Exchange_Currency", "Exchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Exchange_Currency1", "Exchange")]
        public EntityCollection<Exchange> Exchanges1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exchange>("TradingModel.FK_Exchange_Currency1", "Exchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exchange>("TradingModel.FK_Exchange_Currency1", "Exchange", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="DummyView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DummyView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DummyView object.
        /// </summary>
        /// <param name="bUYER_ID">Initial value of the BUYER_ID property.</param>
        public static DummyView CreateDummyView(global::System.Int32 bUYER_ID)
        {
            DummyView dummyView = new DummyView();
            dummyView.BUYER_ID = bUYER_ID;
            return dummyView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BUYER_ID
        {
            get
            {
                return _BUYER_ID;
            }
            set
            {
                if (_BUYER_ID != value)
                {
                    OnBUYER_IDChanging(value);
                    ReportPropertyChanging("BUYER_ID");
                    _BUYER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BUYER_ID");
                    OnBUYER_IDChanged();
                }
            }
        }
        private global::System.Int32 _BUYER_ID;
        partial void OnBUYER_IDChanging(global::System.Int32 value);
        partial void OnBUYER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_NAME
        {
            get
            {
                return _BUYER_NAME;
            }
            set
            {
                OnBUYER_NAMEChanging(value);
                ReportPropertyChanging("BUYER_NAME");
                _BUYER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_NAME");
                OnBUYER_NAMEChanged();
            }
        }
        private global::System.String _BUYER_NAME;
        partial void OnBUYER_NAMEChanging(global::System.String value);
        partial void OnBUYER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_CONTACT
        {
            get
            {
                return _BUYER_CONTACT;
            }
            set
            {
                OnBUYER_CONTACTChanging(value);
                ReportPropertyChanging("BUYER_CONTACT");
                _BUYER_CONTACT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_CONTACT");
                OnBUYER_CONTACTChanged();
            }
        }
        private global::System.String _BUYER_CONTACT;
        partial void OnBUYER_CONTACTChanging(global::System.String value);
        partial void OnBUYER_CONTACTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_EMAIL
        {
            get
            {
                return _BUYER_EMAIL;
            }
            set
            {
                OnBUYER_EMAILChanging(value);
                ReportPropertyChanging("BUYER_EMAIL");
                _BUYER_EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_EMAIL");
                OnBUYER_EMAILChanged();
            }
        }
        private global::System.String _BUYER_EMAIL;
        partial void OnBUYER_EMAILChanging(global::System.String value);
        partial void OnBUYER_EMAILChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Exchange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exchange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exchange object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Exchange CreateExchange(global::System.Int32 id)
        {
            Exchange exchange = new Exchange();
            exchange.id = id;
            return exchange;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CId_To
        {
            get
            {
                return _CId_To;
            }
            set
            {
                OnCId_ToChanging(value);
                ReportPropertyChanging("CId_To");
                _CId_To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CId_To");
                OnCId_ToChanged();
            }
        }
        private Nullable<global::System.Int32> _CId_To;
        partial void OnCId_ToChanging(Nullable<global::System.Int32> value);
        partial void OnCId_ToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CId_From
        {
            get
            {
                return _CId_From;
            }
            set
            {
                OnCId_FromChanging(value);
                ReportPropertyChanging("CId_From");
                _CId_From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CId_From");
                OnCId_FromChanged();
            }
        }
        private Nullable<global::System.Int32> _CId_From;
        partial void OnCId_FromChanging(Nullable<global::System.Int32> value);
        partial void OnCId_FromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Ex_Rate
        {
            get
            {
                return _Ex_Rate;
            }
            set
            {
                OnEx_RateChanging(value);
                ReportPropertyChanging("Ex_Rate");
                _Ex_Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ex_Rate");
                OnEx_RateChanged();
            }
        }
        private Nullable<global::System.Double> _Ex_Rate;
        partial void OnEx_RateChanging(Nullable<global::System.Double> value);
        partial void OnEx_RateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Exchange_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("TradingModel.FK_Exchange_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("TradingModel.FK_Exchange_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("TradingModel.FK_Exchange_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("TradingModel.FK_Exchange_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Exchange_Currency1", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("TradingModel.FK_Exchange_Currency1", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("TradingModel.FK_Exchange_Currency1", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("TradingModel.FK_Exchange_Currency1", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("TradingModel.FK_Exchange_Currency1", "Currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Frieght")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Frieght : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Frieght object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Frieght CreateFrieght(global::System.Int32 id)
        {
            Frieght frieght = new Frieght();
            frieght.id = id;
            return frieght;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String company
        {
            get
            {
                return _company;
            }
            set
            {
                OncompanyChanging(value);
                ReportPropertyChanging("company");
                _company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("company");
                OncompanyChanged();
            }
        }
        private global::System.String _company;
        partial void OncompanyChanging(global::System.String value);
        partial void OncompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @ref
        {
            get
            {
                return _ref;
            }
            set
            {
                OnrefChanging(value);
                ReportPropertyChanging("ref");
                _ref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ref");
                OnrefChanged();
            }
        }
        private global::System.String _ref;
        partial void OnrefChanging(global::System.String value);
        partial void OnrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_Frieght", "SHIP_SUPP")]
        public EntityCollection<SHIP_SUPP> SHIP_SUPP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_Frieght", "SHIP_SUPP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_Frieght", "SHIP_SUPP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Inventory CreateInventory(global::System.Int32 id)
        {
            Inventory inventory = new Inventory();
            inventory.id = id;
            return inventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> prd_id
        {
            get
            {
                return _prd_id;
            }
            set
            {
                Onprd_idChanging(value);
                ReportPropertyChanging("prd_id");
                _prd_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_id");
                Onprd_idChanged();
            }
        }
        private Nullable<global::System.Int32> _prd_id;
        partial void Onprd_idChanging(Nullable<global::System.Int32> value);
        partial void Onprd_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> prd_quantity
        {
            get
            {
                return _prd_quantity;
            }
            set
            {
                Onprd_quantityChanging(value);
                ReportPropertyChanging("prd_quantity");
                _prd_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_quantity");
                Onprd_quantityChanged();
            }
        }
        private Nullable<global::System.Int32> _prd_quantity;
        partial void Onprd_quantityChanging(Nullable<global::System.Int32> value);
        partial void Onprd_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ship_date
        {
            get
            {
                return _ship_date;
            }
            set
            {
                Onship_dateChanging(value);
                ReportPropertyChanging("ship_date");
                _ship_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ship_date");
                Onship_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ship_date;
        partial void Onship_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onship_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ship_prd_id
        {
            get
            {
                return _ship_prd_id;
            }
            set
            {
                Onship_prd_idChanging(value);
                ReportPropertyChanging("ship_prd_id");
                _ship_prd_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ship_prd_id");
                Onship_prd_idChanged();
            }
        }
        private Nullable<global::System.Int32> _ship_prd_id;
        partial void Onship_prd_idChanging(Nullable<global::System.Int32> value);
        partial void Onship_prd_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> prd_cost
        {
            get
            {
                return _prd_cost;
            }
            set
            {
                Onprd_costChanging(value);
                ReportPropertyChanging("prd_cost");
                _prd_cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_cost");
                Onprd_costChanged();
            }
        }
        private Nullable<global::System.Double> _prd_cost;
        partial void Onprd_costChanging(Nullable<global::System.Double> value);
        partial void Onprd_costChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Inventory_PRODUCT", "PRODUCT")]
        public PRODUCT PRODUCT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_Inventory_PRODUCT", "PRODUCT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_Inventory_PRODUCT", "PRODUCT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PRODUCT> PRODUCTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_Inventory_PRODUCT", "PRODUCT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PRODUCT>("TradingModel.FK_Inventory_PRODUCT", "PRODUCT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Inventory_SHIP_PRD", "SHIP_PRD")]
        public SHIP_PRD SHIP_PRD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_PRD>("TradingModel.FK_Inventory_SHIP_PRD", "SHIP_PRD").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_PRD>("TradingModel.FK_Inventory_SHIP_PRD", "SHIP_PRD").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SHIP_PRD> SHIP_PRDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_PRD>("TradingModel.FK_Inventory_SHIP_PRD", "SHIP_PRD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SHIP_PRD>("TradingModel.FK_Inventory_SHIP_PRD", "SHIP_PRD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Invoice CreateInvoice(global::System.Int32 id)
        {
            Invoice invoice = new Invoice();
            invoice.id = id;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SH_id
        {
            get
            {
                return _SH_id;
            }
            set
            {
                OnSH_idChanging(value);
                ReportPropertyChanging("SH_id");
                _SH_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SH_id");
                OnSH_idChanged();
            }
        }
        private Nullable<global::System.Int32> _SH_id;
        partial void OnSH_idChanging(Nullable<global::System.Int32> value);
        partial void OnSH_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String in_type
        {
            get
            {
                return _in_type;
            }
            set
            {
                Onin_typeChanging(value);
                ReportPropertyChanging("in_type");
                _in_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("in_type");
                Onin_typeChanged();
            }
        }
        private global::System.String _in_type;
        partial void Onin_typeChanging(global::System.String value);
        partial void Onin_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @ref
        {
            get
            {
                return _ref;
            }
            set
            {
                OnrefChanging(value);
                ReportPropertyChanging("ref");
                _ref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ref");
                OnrefChanged();
            }
        }
        private global::System.String _ref;
        partial void OnrefChanging(global::System.String value);
        partial void OnrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> in_total
        {
            get
            {
                return _in_total;
            }
            set
            {
                Onin_totalChanging(value);
                ReportPropertyChanging("in_total");
                _in_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("in_total");
                Onin_totalChanged();
            }
        }
        private Nullable<global::System.Double> _in_total;
        partial void Onin_totalChanging(Nullable<global::System.Double> value);
        partial void Onin_totalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String in_currency
        {
            get
            {
                return _in_currency;
            }
            set
            {
                Onin_currencyChanging(value);
                ReportPropertyChanging("in_currency");
                _in_currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("in_currency");
                Onin_currencyChanged();
            }
        }
        private global::System.String _in_currency;
        partial void Onin_currencyChanging(global::System.String value);
        partial void Onin_currencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> currency_total
        {
            get
            {
                return _currency_total;
            }
            set
            {
                Oncurrency_totalChanging(value);
                ReportPropertyChanging("currency_total");
                _currency_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currency_total");
                Oncurrency_totalChanged();
            }
        }
        private Nullable<global::System.Double> _currency_total;
        partial void Oncurrency_totalChanging(Nullable<global::System.Double> value);
        partial void Oncurrency_totalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ex_rate
        {
            get
            {
                return _ex_rate;
            }
            set
            {
                Onex_rateChanging(value);
                ReportPropertyChanging("ex_rate");
                _ex_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ex_rate");
                Onex_rateChanged();
            }
        }
        private Nullable<global::System.Double> _ex_rate;
        partial void Onex_rateChanging(Nullable<global::System.Double> value);
        partial void Onex_rateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> in_paid
        {
            get
            {
                return _in_paid;
            }
            set
            {
                Onin_paidChanging(value);
                ReportPropertyChanging("in_paid");
                _in_paid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("in_paid");
                Onin_paidChanged();
            }
        }
        private Nullable<global::System.Double> _in_paid;
        partial void Onin_paidChanging(Nullable<global::System.Double> value);
        partial void Onin_paidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pck
        {
            get
            {
                return _pck;
            }
            set
            {
                OnpckChanging(value);
                ReportPropertyChanging("pck");
                _pck = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pck");
                OnpckChanged();
            }
        }
        private global::System.String _pck;
        partial void OnpckChanging(global::System.String value);
        partial void OnpckChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Account_Transaction_Invoices", "Account_Transaction")]
        public EntityCollection<Account_Transaction> Account_Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account_Transaction>("TradingModel.FK_Account_Transaction_Invoices", "Account_Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account_Transaction>("TradingModel.FK_Account_Transaction_Invoices", "Account_Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Invoices_SHIP_SUPP", "SHIP_SUPP")]
        public SHIP_SUPP SHIP_SUPP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_SUPP>("TradingModel.FK_Invoices_SHIP_SUPP", "SHIP_SUPP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_SUPP>("TradingModel.FK_Invoices_SHIP_SUPP", "SHIP_SUPP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SHIP_SUPP> SHIP_SUPPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_SUPP>("TradingModel.FK_Invoices_SHIP_SUPP", "SHIP_SUPP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SHIP_SUPP>("TradingModel.FK_Invoices_SHIP_SUPP", "SHIP_SUPP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="ORDER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ORDER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ORDER object.
        /// </summary>
        /// <param name="oRDER_ID">Initial value of the ORDER_ID property.</param>
        public static ORDER CreateORDER(global::System.Int32 oRDER_ID)
        {
            ORDER oRDER = new ORDER();
            oRDER.ORDER_ID = oRDER_ID;
            return oRDER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ORDER_ID
        {
            get
            {
                return _ORDER_ID;
            }
            set
            {
                if (_ORDER_ID != value)
                {
                    OnORDER_IDChanging(value);
                    ReportPropertyChanging("ORDER_ID");
                    _ORDER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ORDER_ID");
                    OnORDER_IDChanged();
                }
            }
        }
        private global::System.Int32 _ORDER_ID;
        partial void OnORDER_IDChanging(global::System.Int32 value);
        partial void OnORDER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BUYER_ID
        {
            get
            {
                return _BUYER_ID;
            }
            set
            {
                OnBUYER_IDChanging(value);
                ReportPropertyChanging("BUYER_ID");
                _BUYER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BUYER_ID");
                OnBUYER_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _BUYER_ID;
        partial void OnBUYER_IDChanging(Nullable<global::System.Int32> value);
        partial void OnBUYER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String order_name
        {
            get
            {
                return _order_name;
            }
            set
            {
                Onorder_nameChanging(value);
                ReportPropertyChanging("order_name");
                _order_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("order_name");
                Onorder_nameChanged();
            }
        }
        private global::System.String _order_name;
        partial void Onorder_nameChanging(global::System.String value);
        partial void Onorder_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> order_date
        {
            get
            {
                return _order_date;
            }
            set
            {
                Onorder_dateChanging(value);
                ReportPropertyChanging("order_date");
                _order_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_date");
                Onorder_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _order_date;
        partial void Onorder_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onorder_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> required_date
        {
            get
            {
                return _required_date;
            }
            set
            {
                Onrequired_dateChanging(value);
                ReportPropertyChanging("required_date");
                _required_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("required_date");
                Onrequired_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _required_date;
        partial void Onrequired_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onrequired_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> shipped_date
        {
            get
            {
                return _shipped_date;
            }
            set
            {
                Onshipped_dateChanging(value);
                ReportPropertyChanging("shipped_date");
                _shipped_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("shipped_date");
                Onshipped_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _shipped_date;
        partial void Onshipped_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onshipped_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @ref
        {
            get
            {
                return _ref;
            }
            set
            {
                OnrefChanging(value);
                ReportPropertyChanging("ref");
                _ref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ref");
                OnrefChanged();
            }
        }
        private global::System.String _ref;
        partial void OnrefChanging(global::System.String value);
        partial void OnrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> order_total
        {
            get
            {
                return _order_total;
            }
            set
            {
                Onorder_totalChanging(value);
                ReportPropertyChanging("order_total");
                _order_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_total");
                Onorder_totalChanged();
            }
        }
        private Nullable<global::System.Double> _order_total;
        partial void Onorder_totalChanging(Nullable<global::System.Double> value);
        partial void Onorder_totalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> invoice
        {
            get
            {
                return _invoice;
            }
            set
            {
                OninvoiceChanging(value);
                ReportPropertyChanging("invoice");
                _invoice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoice");
                OninvoiceChanged();
            }
        }
        private Nullable<global::System.Boolean> _invoice;
        partial void OninvoiceChanging(Nullable<global::System.Boolean> value);
        partial void OninvoiceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_ORDER_BUYER", "BUYER")]
        public BUYER BUYER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUYER>("TradingModel.FK_ORDER_BUYER", "BUYER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUYER>("TradingModel.FK_ORDER_BUYER", "BUYER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BUYER> BUYERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUYER>("TradingModel.FK_ORDER_BUYER", "BUYER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BUYER>("TradingModel.FK_ORDER_BUYER", "BUYER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_ORDER", "SHIP_SUPP")]
        public EntityCollection<SHIP_SUPP> SHIP_SUPP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_ORDER", "SHIP_SUPP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_ORDER", "SHIP_SUPP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Order_prod_ORDER", "Order_prod")]
        public EntityCollection<Order_prod> Order_prod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order_prod>("TradingModel.FK_Order_prod_ORDER", "Order_prod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order_prod>("TradingModel.FK_Order_prod_ORDER", "Order_prod", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Order_prod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order_prod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order_prod object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Order_prod CreateOrder_prod(global::System.Int32 id)
        {
            Order_prod order_prod = new Order_prod();
            order_prod.id = id;
            return order_prod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ord_id
        {
            get
            {
                return _ord_id;
            }
            set
            {
                Onord_idChanging(value);
                ReportPropertyChanging("ord_id");
                _ord_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ord_id");
                Onord_idChanged();
            }
        }
        private Nullable<global::System.Int32> _ord_id;
        partial void Onord_idChanging(Nullable<global::System.Int32> value);
        partial void Onord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> prd_id
        {
            get
            {
                return _prd_id;
            }
            set
            {
                Onprd_idChanging(value);
                ReportPropertyChanging("prd_id");
                _prd_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_id");
                Onprd_idChanged();
            }
        }
        private Nullable<global::System.Int32> _prd_id;
        partial void Onprd_idChanging(Nullable<global::System.Int32> value);
        partial void Onprd_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> prd_sp
        {
            get
            {
                return _prd_sp;
            }
            set
            {
                Onprd_spChanging(value);
                ReportPropertyChanging("prd_sp");
                _prd_sp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_sp");
                Onprd_spChanged();
            }
        }
        private Nullable<global::System.Double> _prd_sp;
        partial void Onprd_spChanging(Nullable<global::System.Double> value);
        partial void Onprd_spChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> prd_unit
        {
            get
            {
                return _prd_unit;
            }
            set
            {
                Onprd_unitChanging(value);
                ReportPropertyChanging("prd_unit");
                _prd_unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_unit");
                Onprd_unitChanged();
            }
        }
        private Nullable<global::System.Int32> _prd_unit;
        partial void Onprd_unitChanging(Nullable<global::System.Int32> value);
        partial void Onprd_unitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> payment_id
        {
            get
            {
                return _payment_id;
            }
            set
            {
                Onpayment_idChanging(value);
                ReportPropertyChanging("payment_id");
                _payment_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payment_id");
                Onpayment_idChanged();
            }
        }
        private Nullable<global::System.Int32> _payment_id;
        partial void Onpayment_idChanging(Nullable<global::System.Int32> value);
        partial void Onpayment_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String payment_type
        {
            get
            {
                return _payment_type;
            }
            set
            {
                Onpayment_typeChanging(value);
                ReportPropertyChanging("payment_type");
                _payment_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("payment_type");
                Onpayment_typeChanged();
            }
        }
        private global::System.String _payment_type;
        partial void Onpayment_typeChanging(global::System.String value);
        partial void Onpayment_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> total
        {
            get
            {
                return _total;
            }
            set
            {
                OntotalChanging(value);
                ReportPropertyChanging("total");
                _total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("total");
                OntotalChanged();
            }
        }
        private Nullable<global::System.Double> _total;
        partial void OntotalChanging(Nullable<global::System.Double> value);
        partial void OntotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Order_prod_ORDER", "ORDER")]
        public ORDER ORDER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ORDER>("TradingModel.FK_Order_prod_ORDER", "ORDER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ORDER>("TradingModel.FK_Order_prod_ORDER", "ORDER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ORDER> ORDERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ORDER>("TradingModel.FK_Order_prod_ORDER", "ORDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ORDER>("TradingModel.FK_Order_prod_ORDER", "ORDER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Order_prod_Payments", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("TradingModel.FK_Order_prod_Payments", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("TradingModel.FK_Order_prod_Payments", "Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("TradingModel.FK_Order_prod_Payments", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("TradingModel.FK_Order_prod_Payments", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Order_prod_PRODUCT", "PRODUCT")]
        public PRODUCT PRODUCT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_Order_prod_PRODUCT", "PRODUCT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_Order_prod_PRODUCT", "PRODUCT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PRODUCT> PRODUCTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_Order_prod_PRODUCT", "PRODUCT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PRODUCT>("TradingModel.FK_Order_prod_PRODUCT", "PRODUCT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Payment CreatePayment(global::System.Int32 id)
        {
            Payment payment = new Payment();
            payment.id = id;
            return payment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_Payments", "SHIP_SUPP")]
        public EntityCollection<SHIP_SUPP> SHIP_SUPP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_Payments", "SHIP_SUPP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_Payments", "SHIP_SUPP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Order_prod_Payments", "Order_prod")]
        public EntityCollection<Order_prod> Order_prod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order_prod>("TradingModel.FK_Order_prod_Payments", "Order_prod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order_prod>("TradingModel.FK_Order_prod_Payments", "Order_prod", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="PRODUCT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PRODUCT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PRODUCT object.
        /// </summary>
        /// <param name="pRD_ID">Initial value of the PRD_ID property.</param>
        public static PRODUCT CreatePRODUCT(global::System.Int32 pRD_ID)
        {
            PRODUCT pRODUCT = new PRODUCT();
            pRODUCT.PRD_ID = pRD_ID;
            return pRODUCT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRD_ID
        {
            get
            {
                return _PRD_ID;
            }
            set
            {
                if (_PRD_ID != value)
                {
                    OnPRD_IDChanging(value);
                    ReportPropertyChanging("PRD_ID");
                    _PRD_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PRD_ID");
                    OnPRD_IDChanged();
                }
            }
        }
        private global::System.Int32 _PRD_ID;
        partial void OnPRD_IDChanging(global::System.Int32 value);
        partial void OnPRD_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_NAME
        {
            get
            {
                return _PRD_NAME;
            }
            set
            {
                OnPRD_NAMEChanging(value);
                ReportPropertyChanging("PRD_NAME");
                _PRD_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_NAME");
                OnPRD_NAMEChanged();
            }
        }
        private global::System.String _PRD_NAME;
        partial void OnPRD_NAMEChanging(global::System.String value);
        partial void OnPRD_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_CP
        {
            get
            {
                return _PRD_CP;
            }
            set
            {
                OnPRD_CPChanging(value);
                ReportPropertyChanging("PRD_CP");
                _PRD_CP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_CP");
                OnPRD_CPChanged();
            }
        }
        private global::System.String _PRD_CP;
        partial void OnPRD_CPChanging(global::System.String value);
        partial void OnPRD_CPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_SP
        {
            get
            {
                return _PRD_SP;
            }
            set
            {
                OnPRD_SPChanging(value);
                ReportPropertyChanging("PRD_SP");
                _PRD_SP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_SP");
                OnPRD_SPChanged();
            }
        }
        private global::System.String _PRD_SP;
        partial void OnPRD_SPChanging(global::System.String value);
        partial void OnPRD_SPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_DESC
        {
            get
            {
                return _PRD_DESC;
            }
            set
            {
                OnPRD_DESCChanging(value);
                ReportPropertyChanging("PRD_DESC");
                _PRD_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_DESC");
                OnPRD_DESCChanged();
            }
        }
        private global::System.String _PRD_DESC;
        partial void OnPRD_DESCChanging(global::System.String value);
        partial void OnPRD_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_CATEGORY
        {
            get
            {
                return _PRD_CATEGORY;
            }
            set
            {
                OnPRD_CATEGORYChanging(value);
                ReportPropertyChanging("PRD_CATEGORY");
                _PRD_CATEGORY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_CATEGORY");
                OnPRD_CATEGORYChanged();
            }
        }
        private global::System.String _PRD_CATEGORY;
        partial void OnPRD_CATEGORYChanging(global::System.String value);
        partial void OnPRD_CATEGORYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Inventory_PRODUCT", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("TradingModel.FK_Inventory_PRODUCT", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("TradingModel.FK_Inventory_PRODUCT", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_PRD_PRODUCT", "SHIP_PRD")]
        public EntityCollection<SHIP_PRD> SHIP_PRD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHIP_PRD>("TradingModel.FK_SHIP_PRD_PRODUCT", "SHIP_PRD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHIP_PRD>("TradingModel.FK_SHIP_PRD_PRODUCT", "SHIP_PRD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Order_prod_PRODUCT", "Order_prod")]
        public EntityCollection<Order_prod> Order_prod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order_prod>("TradingModel.FK_Order_prod_PRODUCT", "Order_prod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order_prod>("TradingModel.FK_Order_prod_PRODUCT", "Order_prod", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="SHIP_PRD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SHIP_PRD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SHIP_PRD object.
        /// </summary>
        /// <param name="sHIP_PRD_ID">Initial value of the SHIP_PRD_ID property.</param>
        public static SHIP_PRD CreateSHIP_PRD(global::System.Int32 sHIP_PRD_ID)
        {
            SHIP_PRD sHIP_PRD = new SHIP_PRD();
            sHIP_PRD.SHIP_PRD_ID = sHIP_PRD_ID;
            return sHIP_PRD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SHIP_PRD_ID
        {
            get
            {
                return _SHIP_PRD_ID;
            }
            set
            {
                if (_SHIP_PRD_ID != value)
                {
                    OnSHIP_PRD_IDChanging(value);
                    ReportPropertyChanging("SHIP_PRD_ID");
                    _SHIP_PRD_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHIP_PRD_ID");
                    OnSHIP_PRD_IDChanged();
                }
            }
        }
        private global::System.Int32 _SHIP_PRD_ID;
        partial void OnSHIP_PRD_IDChanging(global::System.Int32 value);
        partial void OnSHIP_PRD_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRD_ID
        {
            get
            {
                return _PRD_ID;
            }
            set
            {
                OnPRD_IDChanging(value);
                ReportPropertyChanging("PRD_ID");
                _PRD_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRD_ID");
                OnPRD_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _PRD_ID;
        partial void OnPRD_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPRD_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRD_CP
        {
            get
            {
                return _PRD_CP;
            }
            set
            {
                OnPRD_CPChanging(value);
                ReportPropertyChanging("PRD_CP");
                _PRD_CP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRD_CP");
                OnPRD_CPChanged();
            }
        }
        private Nullable<global::System.Int32> _PRD_CP;
        partial void OnPRD_CPChanging(Nullable<global::System.Int32> value);
        partial void OnPRD_CPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_REMARKS
        {
            get
            {
                return _PRD_REMARKS;
            }
            set
            {
                OnPRD_REMARKSChanging(value);
                ReportPropertyChanging("PRD_REMARKS");
                _PRD_REMARKS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_REMARKS");
                OnPRD_REMARKSChanged();
            }
        }
        private global::System.String _PRD_REMARKS;
        partial void OnPRD_REMARKSChanging(global::System.String value);
        partial void OnPRD_REMARKSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ship_id
        {
            get
            {
                return _Ship_id;
            }
            set
            {
                OnShip_idChanging(value);
                ReportPropertyChanging("Ship_id");
                _Ship_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ship_id");
                OnShip_idChanged();
            }
        }
        private Nullable<global::System.Int32> _Ship_id;
        partial void OnShip_idChanging(Nullable<global::System.Int32> value);
        partial void OnShip_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> units
        {
            get
            {
                return _units;
            }
            set
            {
                OnunitsChanging(value);
                ReportPropertyChanging("units");
                _units = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("units");
                OnunitsChanged();
            }
        }
        private Nullable<global::System.Int32> _units;
        partial void OnunitsChanging(Nullable<global::System.Int32> value);
        partial void OnunitsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_PRD_PRODUCT", "PRODUCT")]
        public PRODUCT PRODUCT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_SHIP_PRD_PRODUCT", "PRODUCT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_SHIP_PRD_PRODUCT", "PRODUCT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PRODUCT> PRODUCTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PRODUCT>("TradingModel.FK_SHIP_PRD_PRODUCT", "PRODUCT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PRODUCT>("TradingModel.FK_SHIP_PRD_PRODUCT", "PRODUCT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_PRD_SHIP_SUPP", "SHIP_SUPP")]
        public SHIP_SUPP SHIP_SUPP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_SUPP>("TradingModel.FK_SHIP_PRD_SHIP_SUPP", "SHIP_SUPP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_SUPP>("TradingModel.FK_SHIP_PRD_SHIP_SUPP", "SHIP_SUPP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SHIP_SUPP> SHIP_SUPPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SHIP_SUPP>("TradingModel.FK_SHIP_PRD_SHIP_SUPP", "SHIP_SUPP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SHIP_SUPP>("TradingModel.FK_SHIP_PRD_SHIP_SUPP", "SHIP_SUPP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Inventory_SHIP_PRD", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("TradingModel.FK_Inventory_SHIP_PRD", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("TradingModel.FK_Inventory_SHIP_PRD", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="SHIP_SUPP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SHIP_SUPP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SHIP_SUPP object.
        /// </summary>
        /// <param name="sHIP_SUPP_ID">Initial value of the SHIP_SUPP_ID property.</param>
        public static SHIP_SUPP CreateSHIP_SUPP(global::System.Int32 sHIP_SUPP_ID)
        {
            SHIP_SUPP sHIP_SUPP = new SHIP_SUPP();
            sHIP_SUPP.SHIP_SUPP_ID = sHIP_SUPP_ID;
            return sHIP_SUPP;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SHIP_SUPP_ID
        {
            get
            {
                return _SHIP_SUPP_ID;
            }
            set
            {
                if (_SHIP_SUPP_ID != value)
                {
                    OnSHIP_SUPP_IDChanging(value);
                    ReportPropertyChanging("SHIP_SUPP_ID");
                    _SHIP_SUPP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHIP_SUPP_ID");
                    OnSHIP_SUPP_IDChanged();
                }
            }
        }
        private global::System.Int32 _SHIP_SUPP_ID;
        partial void OnSHIP_SUPP_IDChanging(global::System.Int32 value);
        partial void OnSHIP_SUPP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SUPP_ID
        {
            get
            {
                return _SUPP_ID;
            }
            set
            {
                OnSUPP_IDChanging(value);
                ReportPropertyChanging("SUPP_ID");
                _SUPP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SUPP_ID");
                OnSUPP_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _SUPP_ID;
        partial void OnSUPP_IDChanging(Nullable<global::System.Int32> value);
        partial void OnSUPP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> frieght_id
        {
            get
            {
                return _frieght_id;
            }
            set
            {
                Onfrieght_idChanging(value);
                ReportPropertyChanging("frieght_id");
                _frieght_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("frieght_id");
                Onfrieght_idChanged();
            }
        }
        private Nullable<global::System.Int32> _frieght_id;
        partial void Onfrieght_idChanging(Nullable<global::System.Int32> value);
        partial void Onfrieght_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_REMARKS
        {
            get
            {
                return _SUPP_REMARKS;
            }
            set
            {
                OnSUPP_REMARKSChanging(value);
                ReportPropertyChanging("SUPP_REMARKS");
                _SUPP_REMARKS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_REMARKS");
                OnSUPP_REMARKSChanged();
            }
        }
        private global::System.String _SUPP_REMARKS;
        partial void OnSUPP_REMARKSChanging(global::System.String value);
        partial void OnSUPP_REMARKSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String payment_type
        {
            get
            {
                return _payment_type;
            }
            set
            {
                Onpayment_typeChanging(value);
                ReportPropertyChanging("payment_type");
                _payment_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("payment_type");
                Onpayment_typeChanged();
            }
        }
        private global::System.String _payment_type;
        partial void Onpayment_typeChanging(global::System.String value);
        partial void Onpayment_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> py_type_id
        {
            get
            {
                return _py_type_id;
            }
            set
            {
                Onpy_type_idChanging(value);
                ReportPropertyChanging("py_type_id");
                _py_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("py_type_id");
                Onpy_type_idChanged();
            }
        }
        private Nullable<global::System.Int32> _py_type_id;
        partial void Onpy_type_idChanging(Nullable<global::System.Int32> value);
        partial void Onpy_type_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> sh_total
        {
            get
            {
                return _sh_total;
            }
            set
            {
                Onsh_totalChanging(value);
                ReportPropertyChanging("sh_total");
                _sh_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sh_total");
                Onsh_totalChanged();
            }
        }
        private Nullable<global::System.Double> _sh_total;
        partial void Onsh_totalChanging(Nullable<global::System.Double> value);
        partial void Onsh_totalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                Onorder_idChanging(value);
                ReportPropertyChanging("order_id");
                _order_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_id");
                Onorder_idChanged();
            }
        }
        private Nullable<global::System.Int32> _order_id;
        partial void Onorder_idChanging(Nullable<global::System.Int32> value);
        partial void Onorder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> service_charges
        {
            get
            {
                return _service_charges;
            }
            set
            {
                Onservice_chargesChanging(value);
                ReportPropertyChanging("service_charges");
                _service_charges = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("service_charges");
                Onservice_chargesChanged();
            }
        }
        private Nullable<global::System.Double> _service_charges;
        partial void Onservice_chargesChanging(Nullable<global::System.Double> value);
        partial void Onservice_chargesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String shipment_type
        {
            get
            {
                return _shipment_type;
            }
            set
            {
                Onshipment_typeChanging(value);
                ReportPropertyChanging("shipment_type");
                _shipment_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("shipment_type");
                Onshipment_typeChanged();
            }
        }
        private global::System.String _shipment_type;
        partial void Onshipment_typeChanging(global::System.String value);
        partial void Onshipment_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ship_name
        {
            get
            {
                return _Ship_name;
            }
            set
            {
                OnShip_nameChanging(value);
                ReportPropertyChanging("Ship_name");
                _Ship_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ship_name");
                OnShip_nameChanged();
            }
        }
        private global::System.String _Ship_name;
        partial void OnShip_nameChanging(global::System.String value);
        partial void OnShip_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ship_payment
        {
            get
            {
                return _ship_payment;
            }
            set
            {
                Onship_paymentChanging(value);
                ReportPropertyChanging("ship_payment");
                _ship_payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ship_payment");
                Onship_paymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _ship_payment;
        partial void Onship_paymentChanging(Nullable<global::System.Boolean> value);
        partial void Onship_paymentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_Frieght", "Frieght")]
        public Frieght Frieght
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Frieght>("TradingModel.FK_SHIP_SUPP_Frieght", "Frieght").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Frieght>("TradingModel.FK_SHIP_SUPP_Frieght", "Frieght").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Frieght> FrieghtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Frieght>("TradingModel.FK_SHIP_SUPP_Frieght", "Frieght");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Frieght>("TradingModel.FK_SHIP_SUPP_Frieght", "Frieght", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_Invoices_SHIP_SUPP", "Invoices")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("TradingModel.FK_Invoices_SHIP_SUPP", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("TradingModel.FK_Invoices_SHIP_SUPP", "Invoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_Payments", "Payments")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("TradingModel.FK_SHIP_SUPP_Payments", "Payments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("TradingModel.FK_SHIP_SUPP_Payments", "Payments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("TradingModel.FK_SHIP_SUPP_Payments", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("TradingModel.FK_SHIP_SUPP_Payments", "Payments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_SUPPLIER", "SUPPLIER")]
        public SUPPLIER SUPPLIER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUPPLIER>("TradingModel.FK_SHIP_SUPP_SUPPLIER", "SUPPLIER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUPPLIER>("TradingModel.FK_SHIP_SUPP_SUPPLIER", "SUPPLIER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SUPPLIER> SUPPLIERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUPPLIER>("TradingModel.FK_SHIP_SUPP_SUPPLIER", "SUPPLIER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SUPPLIER>("TradingModel.FK_SHIP_SUPP_SUPPLIER", "SUPPLIER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_ORDER", "ORDER")]
        public ORDER ORDER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ORDER>("TradingModel.FK_SHIP_SUPP_ORDER", "ORDER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ORDER>("TradingModel.FK_SHIP_SUPP_ORDER", "ORDER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ORDER> ORDERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ORDER>("TradingModel.FK_SHIP_SUPP_ORDER", "ORDER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ORDER>("TradingModel.FK_SHIP_SUPP_ORDER", "ORDER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_PRD_SHIP_SUPP", "SHIP_PRD")]
        public EntityCollection<SHIP_PRD> SHIP_PRD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHIP_PRD>("TradingModel.FK_SHIP_PRD_SHIP_SUPP", "SHIP_PRD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHIP_PRD>("TradingModel.FK_SHIP_PRD_SHIP_SUPP", "SHIP_PRD", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="SUPPLIER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SUPPLIER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SUPPLIER object.
        /// </summary>
        /// <param name="sUPP_ID">Initial value of the SUPP_ID property.</param>
        public static SUPPLIER CreateSUPPLIER(global::System.Int32 sUPP_ID)
        {
            SUPPLIER sUPPLIER = new SUPPLIER();
            sUPPLIER.SUPP_ID = sUPP_ID;
            return sUPPLIER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SUPP_ID
        {
            get
            {
                return _SUPP_ID;
            }
            set
            {
                if (_SUPP_ID != value)
                {
                    OnSUPP_IDChanging(value);
                    ReportPropertyChanging("SUPP_ID");
                    _SUPP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SUPP_ID");
                    OnSUPP_IDChanged();
                }
            }
        }
        private global::System.Int32 _SUPP_ID;
        partial void OnSUPP_IDChanging(global::System.Int32 value);
        partial void OnSUPP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_NAME
        {
            get
            {
                return _SUPP_NAME;
            }
            set
            {
                OnSUPP_NAMEChanging(value);
                ReportPropertyChanging("SUPP_NAME");
                _SUPP_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_NAME");
                OnSUPP_NAMEChanged();
            }
        }
        private global::System.String _SUPP_NAME;
        partial void OnSUPP_NAMEChanging(global::System.String value);
        partial void OnSUPP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_CONTACT
        {
            get
            {
                return _SUPP_CONTACT;
            }
            set
            {
                OnSUPP_CONTACTChanging(value);
                ReportPropertyChanging("SUPP_CONTACT");
                _SUPP_CONTACT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_CONTACT");
                OnSUPP_CONTACTChanged();
            }
        }
        private global::System.String _SUPP_CONTACT;
        partial void OnSUPP_CONTACTChanging(global::System.String value);
        partial void OnSUPP_CONTACTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_EMAIL
        {
            get
            {
                return _SUPP_EMAIL;
            }
            set
            {
                OnSUPP_EMAILChanging(value);
                ReportPropertyChanging("SUPP_EMAIL");
                _SUPP_EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_EMAIL");
                OnSUPP_EMAILChanged();
            }
        }
        private global::System.String _SUPP_EMAIL;
        partial void OnSUPP_EMAILChanging(global::System.String value);
        partial void OnSUPP_EMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_COMPANY
        {
            get
            {
                return _SUPP_COMPANY;
            }
            set
            {
                OnSUPP_COMPANYChanging(value);
                ReportPropertyChanging("SUPP_COMPANY");
                _SUPP_COMPANY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_COMPANY");
                OnSUPP_COMPANYChanged();
            }
        }
        private global::System.String _SUPP_COMPANY;
        partial void OnSUPP_COMPANYChanging(global::System.String value);
        partial void OnSUPP_COMPANYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_REMARKS
        {
            get
            {
                return _SUPP_REMARKS;
            }
            set
            {
                OnSUPP_REMARKSChanging(value);
                ReportPropertyChanging("SUPP_REMARKS");
                _SUPP_REMARKS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_REMARKS");
                OnSUPP_REMARKSChanged();
            }
        }
        private global::System.String _SUPP_REMARKS;
        partial void OnSUPP_REMARKSChanging(global::System.String value);
        partial void OnSUPP_REMARKSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> E_DATE
        {
            get
            {
                return _E_DATE;
            }
            set
            {
                OnE_DATEChanging(value);
                ReportPropertyChanging("E_DATE");
                _E_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("E_DATE");
                OnE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _E_DATE;
        partial void OnE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> M_DATE
        {
            get
            {
                return _M_DATE;
            }
            set
            {
                OnM_DATEChanging(value);
                ReportPropertyChanging("M_DATE");
                _M_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("M_DATE");
                OnM_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _M_DATE;
        partial void OnM_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnM_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TradingModel", "FK_SHIP_SUPP_SUPPLIER", "SHIP_SUPP")]
        public EntityCollection<SHIP_SUPP> SHIP_SUPP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_SUPPLIER", "SHIP_SUPP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SHIP_SUPP>("TradingModel.FK_SHIP_SUPP_SUPPLIER", "SHIP_SUPP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TradingModel", Name="UserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLogin object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static UserLogin CreateUserLogin(global::System.Int32 id)
        {
            UserLogin userLogin = new UserLogin();
            userLogin.id = id;
            return userLogin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.String _userid;
        partial void OnuseridChanging(global::System.String value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="complexbank")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class complexbank : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new complexbank object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static complexbank Createcomplexbank(global::System.Int32 id)
        {
            complexbank complexbank = new complexbank();
            complexbank.ID = id;
            return complexbank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACC_NUMBER
        {
            get
            {
                return _ACC_NUMBER;
            }
            set
            {
                OnACC_NUMBERChanging(value);
                ReportPropertyChanging("ACC_NUMBER");
                _ACC_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACC_NUMBER");
                OnACC_NUMBERChanged();
            }
        }
        private global::System.String _ACC_NUMBER;
        partial void OnACC_NUMBERChanging(global::System.String value);
        partial void OnACC_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BALANCE
        {
            get
            {
                return _BALANCE;
            }
            set
            {
                OnBALANCEChanging(value);
                ReportPropertyChanging("BALANCE");
                _BALANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BALANCE");
                OnBALANCEChanged();
            }
        }
        private Nullable<global::System.Double> _BALANCE;
        partial void OnBALANCEChanging(Nullable<global::System.Double> value);
        partial void OnBALANCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BRANCH
        {
            get
            {
                return _BRANCH;
            }
            set
            {
                OnBRANCHChanging(value);
                ReportPropertyChanging("BRANCH");
                _BRANCH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BRANCH");
                OnBRANCHChanged();
            }
        }
        private global::System.String _BRANCH;
        partial void OnBRANCHChanging(global::System.String value);
        partial void OnBRANCHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADDRESS
        {
            get
            {
                return _ADDRESS;
            }
            set
            {
                OnADDRESSChanging(value);
                ReportPropertyChanging("ADDRESS");
                _ADDRESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ADDRESS");
                OnADDRESSChanged();
            }
        }
        private global::System.String _ADDRESS;
        partial void OnADDRESSChanging(global::System.String value);
        partial void OnADDRESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CODE
        {
            get
            {
                return _CODE;
            }
            set
            {
                OnCODEChanging(value);
                ReportPropertyChanging("CODE");
                _CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CODE");
                OnCODEChanged();
            }
        }
        private global::System.String _CODE;
        partial void OnCODEChanging(global::System.String value);
        partial void OnCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CONTACT_NUMBER
        {
            get
            {
                return _CONTACT_NUMBER;
            }
            set
            {
                OnCONTACT_NUMBERChanging(value);
                ReportPropertyChanging("CONTACT_NUMBER");
                _CONTACT_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CONTACT_NUMBER");
                OnCONTACT_NUMBERChanged();
            }
        }
        private global::System.String _CONTACT_NUMBER;
        partial void OnCONTACT_NUMBERChanging(global::System.String value);
        partial void OnCONTACT_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OPENING_DATE
        {
            get
            {
                return _OPENING_DATE;
            }
            set
            {
                OnOPENING_DATEChanging(value);
                ReportPropertyChanging("OPENING_DATE");
                _OPENING_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPENING_DATE");
                OnOPENING_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _OPENING_DATE;
        partial void OnOPENING_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnOPENING_DATEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexBuyer")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexBuyer : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexBuyer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexBuyer CreateComplexBuyer(global::System.Int32 id)
        {
            ComplexBuyer complexBuyer = new ComplexBuyer();
            complexBuyer.ID = id;
            return complexBuyer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CONTACT
        {
            get
            {
                return _CONTACT;
            }
            set
            {
                OnCONTACTChanging(value);
                ReportPropertyChanging("CONTACT");
                _CONTACT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CONTACT");
                OnCONTACTChanged();
            }
        }
        private global::System.String _CONTACT;
        partial void OnCONTACTChanging(global::System.String value);
        partial void OnCONTACTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACCOUNT
        {
            get
            {
                return _ACCOUNT;
            }
            set
            {
                OnACCOUNTChanging(value);
                ReportPropertyChanging("ACCOUNT");
                _ACCOUNT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACCOUNT");
                OnACCOUNTChanged();
            }
        }
        private global::System.String _ACCOUNT;
        partial void OnACCOUNTChanging(global::System.String value);
        partial void OnACCOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMPANY
        {
            get
            {
                return _COMPANY;
            }
            set
            {
                OnCOMPANYChanging(value);
                ReportPropertyChanging("COMPANY");
                _COMPANY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMPANY");
                OnCOMPANYChanged();
            }
        }
        private global::System.String _COMPANY;
        partial void OnCOMPANYChanging(global::System.String value);
        partial void OnCOMPANYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REMARKS
        {
            get
            {
                return _REMARKS;
            }
            set
            {
                OnREMARKSChanging(value);
                ReportPropertyChanging("REMARKS");
                _REMARKS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REMARKS");
                OnREMARKSChanged();
            }
        }
        private global::System.String _REMARKS;
        partial void OnREMARKSChanging(global::System.String value);
        partial void OnREMARKSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexChartOfAccounts")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexChartOfAccounts : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexChartOfAccounts object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexChartOfAccounts CreateComplexChartOfAccounts(global::System.Int32 id)
        {
            ComplexChartOfAccounts complexChartOfAccounts = new ComplexChartOfAccounts();
            complexChartOfAccounts.ID = id;
            return complexChartOfAccounts;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACCOUNT_ID
        {
            get
            {
                return _ACCOUNT_ID;
            }
            set
            {
                OnACCOUNT_IDChanging(value);
                ReportPropertyChanging("ACCOUNT_ID");
                _ACCOUNT_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACCOUNT_ID");
                OnACCOUNT_IDChanged();
            }
        }
        private global::System.String _ACCOUNT_ID;
        partial void OnACCOUNT_IDChanging(global::System.String value);
        partial void OnACCOUNT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OPENING_DATE
        {
            get
            {
                return _OPENING_DATE;
            }
            set
            {
                OnOPENING_DATEChanging(value);
                ReportPropertyChanging("OPENING_DATE");
                _OPENING_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPENING_DATE");
                OnOPENING_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _OPENING_DATE;
        partial void OnOPENING_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnOPENING_DATEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexCurrency")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexCurrency : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexExRate")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexExRate : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_to
        {
            get
            {
                return _currency_to;
            }
            set
            {
                Oncurrency_toChanging(value);
                ReportPropertyChanging("currency_to");
                _currency_to = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency_to");
                Oncurrency_toChanged();
            }
        }
        private global::System.String _currency_to;
        partial void Oncurrency_toChanging(global::System.String value);
        partial void Oncurrency_toChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_from
        {
            get
            {
                return _currency_from;
            }
            set
            {
                Oncurrency_fromChanging(value);
                ReportPropertyChanging("currency_from");
                _currency_from = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency_from");
                Oncurrency_fromChanged();
            }
        }
        private global::System.String _currency_from;
        partial void Oncurrency_fromChanging(global::System.String value);
        partial void Oncurrency_fromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Ex_rate
        {
            get
            {
                return _Ex_rate;
            }
            set
            {
                OnEx_rateChanging(value);
                ReportPropertyChanging("Ex_rate");
                _Ex_rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ex_rate");
                OnEx_rateChanged();
            }
        }
        private Nullable<global::System.Double> _Ex_rate;
        partial void OnEx_rateChanging(Nullable<global::System.Double> value);
        partial void OnEx_rateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexFiscalYear")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexFiscalYear : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexFiscalYear object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ComplexFiscalYear CreateComplexFiscalYear(global::System.Int32 id)
        {
            ComplexFiscalYear complexFiscalYear = new ComplexFiscalYear();
            complexFiscalYear.id = id;
            return complexFiscalYear;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> f_from
        {
            get
            {
                return _f_from;
            }
            set
            {
                Onf_fromChanging(value);
                ReportPropertyChanging("f_from");
                _f_from = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("f_from");
                Onf_fromChanged();
            }
        }
        private Nullable<global::System.DateTime> _f_from;
        partial void Onf_fromChanging(Nullable<global::System.DateTime> value);
        partial void Onf_fromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> f_to
        {
            get
            {
                return _f_to;
            }
            set
            {
                Onf_toChanging(value);
                ReportPropertyChanging("f_to");
                _f_to = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("f_to");
                Onf_toChanged();
            }
        }
        private Nullable<global::System.DateTime> _f_to;
        partial void Onf_toChanging(Nullable<global::System.DateTime> value);
        partial void Onf_toChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexFreight")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexFreight : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexFreight object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexFreight CreateComplexFreight(global::System.Int32 id)
        {
            ComplexFreight complexFreight = new ComplexFreight();
            complexFreight.ID = id;
            return complexFreight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMPANY
        {
            get
            {
                return _COMPANY;
            }
            set
            {
                OnCOMPANYChanging(value);
                ReportPropertyChanging("COMPANY");
                _COMPANY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMPANY");
                OnCOMPANYChanged();
            }
        }
        private global::System.String _COMPANY;
        partial void OnCOMPANYChanging(global::System.String value);
        partial void OnCOMPANYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REFRENCE
        {
            get
            {
                return _REFRENCE;
            }
            set
            {
                OnREFRENCEChanging(value);
                ReportPropertyChanging("REFRENCE");
                _REFRENCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REFRENCE");
                OnREFRENCEChanged();
            }
        }
        private global::System.String _REFRENCE;
        partial void OnREFRENCEChanging(global::System.String value);
        partial void OnREFRENCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexInventoryGrid")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexInventoryGrid : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COST_PRICE
        {
            get
            {
                return _COST_PRICE;
            }
            set
            {
                OnCOST_PRICEChanging(value);
                ReportPropertyChanging("COST_PRICE");
                _COST_PRICE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COST_PRICE");
                OnCOST_PRICEChanged();
            }
        }
        private global::System.String _COST_PRICE;
        partial void OnCOST_PRICEChanging(global::System.String value);
        partial void OnCOST_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SALE_PRICE
        {
            get
            {
                return _SALE_PRICE;
            }
            set
            {
                OnSALE_PRICEChanging(value);
                ReportPropertyChanging("SALE_PRICE");
                _SALE_PRICE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SALE_PRICE");
                OnSALE_PRICEChanged();
            }
        }
        private global::System.String _SALE_PRICE;
        partial void OnSALE_PRICEChanging(global::System.String value);
        partial void OnSALE_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY
        {
            get
            {
                return _CATEGORY;
            }
            set
            {
                OnCATEGORYChanging(value);
                ReportPropertyChanging("CATEGORY");
                _CATEGORY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY");
                OnCATEGORYChanged();
            }
        }
        private global::System.String _CATEGORY;
        partial void OnCATEGORYChanging(global::System.String value);
        partial void OnCATEGORYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DEBIT
        {
            get
            {
                return _DEBIT;
            }
            set
            {
                OnDEBITChanging(value);
                ReportPropertyChanging("DEBIT");
                _DEBIT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEBIT");
                OnDEBITChanged();
            }
        }
        private Nullable<global::System.Int32> _DEBIT;
        partial void OnDEBITChanging(Nullable<global::System.Int32> value);
        partial void OnDEBITChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CREDIT
        {
            get
            {
                return _CREDIT;
            }
            set
            {
                OnCREDITChanging(value);
                ReportPropertyChanging("CREDIT");
                _CREDIT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREDIT");
                OnCREDITChanged();
            }
        }
        private Nullable<global::System.Int32> _CREDIT;
        partial void OnCREDITChanging(Nullable<global::System.Int32> value);
        partial void OnCREDITChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> COST_TRANSACTION
        {
            get
            {
                return _COST_TRANSACTION;
            }
            set
            {
                OnCOST_TRANSACTIONChanging(value);
                ReportPropertyChanging("COST_TRANSACTION");
                _COST_TRANSACTION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COST_TRANSACTION");
                OnCOST_TRANSACTIONChanged();
            }
        }
        private Nullable<global::System.Double> _COST_TRANSACTION;
        partial void OnCOST_TRANSACTIONChanging(Nullable<global::System.Double> value);
        partial void OnCOST_TRANSACTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATE
        {
            get
            {
                return _DATE;
            }
            set
            {
                OnDATEChanging(value);
                ReportPropertyChanging("DATE");
                _DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATE");
                OnDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATE;
        partial void OnDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexInvoicesBuyer")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexInvoicesBuyer : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexInvoicesBuyer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexInvoicesBuyer CreateComplexInvoicesBuyer(global::System.Int32 id)
        {
            ComplexInvoicesBuyer complexInvoicesBuyer = new ComplexInvoicesBuyer();
            complexInvoicesBuyer.ID = id;
            return complexInvoicesBuyer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REFRENCE
        {
            get
            {
                return _REFRENCE;
            }
            set
            {
                OnREFRENCEChanging(value);
                ReportPropertyChanging("REFRENCE");
                _REFRENCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REFRENCE");
                OnREFRENCEChanged();
            }
        }
        private global::System.String _REFRENCE;
        partial void OnREFRENCEChanging(global::System.String value);
        partial void OnREFRENCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EX_TOTAL
        {
            get
            {
                return _EX_TOTAL;
            }
            set
            {
                OnEX_TOTALChanging(value);
                ReportPropertyChanging("EX_TOTAL");
                _EX_TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_TOTAL");
                OnEX_TOTALChanged();
            }
        }
        private Nullable<global::System.Double> _EX_TOTAL;
        partial void OnEX_TOTALChanging(Nullable<global::System.Double> value);
        partial void OnEX_TOTALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EX_RATE
        {
            get
            {
                return _EX_RATE;
            }
            set
            {
                OnEX_RATEChanging(value);
                ReportPropertyChanging("EX_RATE");
                _EX_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_RATE");
                OnEX_RATEChanged();
            }
        }
        private Nullable<global::System.Double> _EX_RATE;
        partial void OnEX_RATEChanging(Nullable<global::System.Double> value);
        partial void OnEX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PAID
        {
            get
            {
                return _PAID;
            }
            set
            {
                OnPAIDChanging(value);
                ReportPropertyChanging("PAID");
                _PAID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PAID");
                OnPAIDChanged();
            }
        }
        private Nullable<global::System.Double> _PAID;
        partial void OnPAIDChanging(Nullable<global::System.Double> value);
        partial void OnPAIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexInvoicesSupplier")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexInvoicesSupplier : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexInvoicesSupplier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexInvoicesSupplier CreateComplexInvoicesSupplier(global::System.Int32 id)
        {
            ComplexInvoicesSupplier complexInvoicesSupplier = new ComplexInvoicesSupplier();
            complexInvoicesSupplier.ID = id;
            return complexInvoicesSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REFRENCE
        {
            get
            {
                return _REFRENCE;
            }
            set
            {
                OnREFRENCEChanging(value);
                ReportPropertyChanging("REFRENCE");
                _REFRENCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REFRENCE");
                OnREFRENCEChanged();
            }
        }
        private global::System.String _REFRENCE;
        partial void OnREFRENCEChanging(global::System.String value);
        partial void OnREFRENCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EX_TOTAL
        {
            get
            {
                return _EX_TOTAL;
            }
            set
            {
                OnEX_TOTALChanging(value);
                ReportPropertyChanging("EX_TOTAL");
                _EX_TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_TOTAL");
                OnEX_TOTALChanged();
            }
        }
        private Nullable<global::System.Double> _EX_TOTAL;
        partial void OnEX_TOTALChanging(Nullable<global::System.Double> value);
        partial void OnEX_TOTALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EX_RATE
        {
            get
            {
                return _EX_RATE;
            }
            set
            {
                OnEX_RATEChanging(value);
                ReportPropertyChanging("EX_RATE");
                _EX_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_RATE");
                OnEX_RATEChanged();
            }
        }
        private Nullable<global::System.Double> _EX_RATE;
        partial void OnEX_RATEChanging(Nullable<global::System.Double> value);
        partial void OnEX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PAID
        {
            get
            {
                return _PAID;
            }
            set
            {
                OnPAIDChanging(value);
                ReportPropertyChanging("PAID");
                _PAID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PAID");
                OnPAIDChanged();
            }
        }
        private Nullable<global::System.Double> _PAID;
        partial void OnPAIDChanging(Nullable<global::System.Double> value);
        partial void OnPAIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexInvoiceSupplierDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexInvoiceSupplierDetails : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPPLIER
        {
            get
            {
                return _SUPPLIER;
            }
            set
            {
                OnSUPPLIERChanging(value);
                ReportPropertyChanging("SUPPLIER");
                _SUPPLIER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPPLIER");
                OnSUPPLIERChanged();
            }
        }
        private global::System.String _SUPPLIER;
        partial void OnSUPPLIERChanging(global::System.String value);
        partial void OnSUPPLIERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRODUCTS
        {
            get
            {
                return _PRODUCTS;
            }
            set
            {
                OnPRODUCTSChanging(value);
                ReportPropertyChanging("PRODUCTS");
                _PRODUCTS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRODUCTS");
                OnPRODUCTSChanged();
            }
        }
        private global::System.String _PRODUCTS;
        partial void OnPRODUCTSChanging(global::System.String value);
        partial void OnPRODUCTSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UNTIS
        {
            get
            {
                return _UNTIS;
            }
            set
            {
                OnUNTISChanging(value);
                ReportPropertyChanging("UNTIS");
                _UNTIS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UNTIS");
                OnUNTISChanged();
            }
        }
        private Nullable<global::System.Int32> _UNTIS;
        partial void OnUNTISChanging(Nullable<global::System.Int32> value);
        partial void OnUNTISChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PRICE
        {
            get
            {
                return _PRICE;
            }
            set
            {
                OnPRICEChanging(value);
                ReportPropertyChanging("PRICE");
                _PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRICE");
                OnPRICEChanged();
            }
        }
        private Nullable<global::System.Double> _PRICE;
        partial void OnPRICEChanging(Nullable<global::System.Double> value);
        partial void OnPRICEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexOrderDetailPayments")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexOrderDetailPayments : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRODUCT
        {
            get
            {
                return _PRODUCT;
            }
            set
            {
                OnPRODUCTChanging(value);
                ReportPropertyChanging("PRODUCT");
                _PRODUCT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRODUCT");
                OnPRODUCTChanged();
            }
        }
        private global::System.String _PRODUCT;
        partial void OnPRODUCTChanging(global::System.String value);
        partial void OnPRODUCTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PRICE
        {
            get
            {
                return _PRICE;
            }
            set
            {
                OnPRICEChanging(value);
                ReportPropertyChanging("PRICE");
                _PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRICE");
                OnPRICEChanged();
            }
        }
        private Nullable<global::System.Double> _PRICE;
        partial void OnPRICEChanging(Nullable<global::System.Double> value);
        partial void OnPRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UNIT
        {
            get
            {
                return _UNIT;
            }
            set
            {
                OnUNITChanging(value);
                ReportPropertyChanging("UNIT");
                _UNIT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UNIT");
                OnUNITChanged();
            }
        }
        private Nullable<global::System.Int32> _UNIT;
        partial void OnUNITChanging(Nullable<global::System.Int32> value);
        partial void OnUNITChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexOrderDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexOrderDetails : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRODUCT
        {
            get
            {
                return _PRODUCT;
            }
            set
            {
                OnPRODUCTChanging(value);
                ReportPropertyChanging("PRODUCT");
                _PRODUCT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRODUCT");
                OnPRODUCTChanged();
            }
        }
        private global::System.String _PRODUCT;
        partial void OnPRODUCTChanging(global::System.String value);
        partial void OnPRODUCTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> COST
        {
            get
            {
                return _COST;
            }
            set
            {
                OnCOSTChanging(value);
                ReportPropertyChanging("COST");
                _COST = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COST");
                OnCOSTChanged();
            }
        }
        private Nullable<global::System.Double> _COST;
        partial void OnCOSTChanging(Nullable<global::System.Double> value);
        partial void OnCOSTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UNITS
        {
            get
            {
                return _UNITS;
            }
            set
            {
                OnUNITSChanging(value);
                ReportPropertyChanging("UNITS");
                _UNITS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UNITS");
                OnUNITSChanged();
            }
        }
        private Nullable<global::System.Int32> _UNITS;
        partial void OnUNITSChanging(Nullable<global::System.Int32> value);
        partial void OnUNITSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAYMENT
        {
            get
            {
                return _PAYMENT;
            }
            set
            {
                OnPAYMENTChanging(value);
                ReportPropertyChanging("PAYMENT");
                _PAYMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAYMENT");
                OnPAYMENTChanged();
            }
        }
        private global::System.String _PAYMENT;
        partial void OnPAYMENTChanging(global::System.String value);
        partial void OnPAYMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexOrderPayments")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexOrderPayments : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexOrderPayments object.
        /// </summary>
        /// <param name="oRDER_ID">Initial value of the ORDER_ID property.</param>
        public static ComplexOrderPayments CreateComplexOrderPayments(global::System.Int32 oRDER_ID)
        {
            ComplexOrderPayments complexOrderPayments = new ComplexOrderPayments();
            complexOrderPayments.ORDER_ID = oRDER_ID;
            return complexOrderPayments;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ORDER_ID
        {
            get
            {
                return _ORDER_ID;
            }
            set
            {
                OnORDER_IDChanging(value);
                ReportPropertyChanging("ORDER_ID");
                _ORDER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORDER_ID");
                OnORDER_IDChanged();
            }
        }
        private global::System.Int32 _ORDER_ID;
        partial void OnORDER_IDChanging(global::System.Int32 value);
        partial void OnORDER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_NAME
        {
            get
            {
                return _BUYER_NAME;
            }
            set
            {
                OnBUYER_NAMEChanging(value);
                ReportPropertyChanging("BUYER_NAME");
                _BUYER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_NAME");
                OnBUYER_NAMEChanged();
            }
        }
        private global::System.String _BUYER_NAME;
        partial void OnBUYER_NAMEChanging(global::System.String value);
        partial void OnBUYER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String order_name
        {
            get
            {
                return _order_name;
            }
            set
            {
                Onorder_nameChanging(value);
                ReportPropertyChanging("order_name");
                _order_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("order_name");
                Onorder_nameChanged();
            }
        }
        private global::System.String _order_name;
        partial void Onorder_nameChanging(global::System.String value);
        partial void Onorder_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> order_total
        {
            get
            {
                return _order_total;
            }
            set
            {
                Onorder_totalChanging(value);
                ReportPropertyChanging("order_total");
                _order_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_total");
                Onorder_totalChanged();
            }
        }
        private Nullable<global::System.Double> _order_total;
        partial void Onorder_totalChanging(Nullable<global::System.Double> value);
        partial void Onorder_totalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @ref
        {
            get
            {
                return _ref;
            }
            set
            {
                OnrefChanging(value);
                ReportPropertyChanging("ref");
                _ref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ref");
                OnrefChanged();
            }
        }
        private global::System.String _ref;
        partial void OnrefChanging(global::System.String value);
        partial void OnrefChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexOrders")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexOrders : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C_BUYER_
        {
            get
            {
                return _C_BUYER_;
            }
            set
            {
                OnC_BUYER_Changing(value);
                ReportPropertyChanging("C_BUYER_");
                _C_BUYER_ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C_BUYER_");
                OnC_BUYER_Changed();
            }
        }
        private global::System.String _C_BUYER_;
        partial void OnC_BUYER_Changing(global::System.String value);
        partial void OnC_BUYER_Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ORDER_NAME
        {
            get
            {
                return _ORDER_NAME;
            }
            set
            {
                OnORDER_NAMEChanging(value);
                ReportPropertyChanging("ORDER_NAME");
                _ORDER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ORDER_NAME");
                OnORDER_NAMEChanged();
            }
        }
        private global::System.String _ORDER_NAME;
        partial void OnORDER_NAMEChanging(global::System.String value);
        partial void OnORDER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ORDER_DATE
        {
            get
            {
                return _ORDER_DATE;
            }
            set
            {
                OnORDER_DATEChanging(value);
                ReportPropertyChanging("ORDER_DATE");
                _ORDER_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORDER_DATE");
                OnORDER_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _ORDER_DATE;
        partial void OnORDER_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnORDER_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> REQ_DATE
        {
            get
            {
                return _REQ_DATE;
            }
            set
            {
                OnREQ_DATEChanging(value);
                ReportPropertyChanging("REQ_DATE");
                _REQ_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REQ_DATE");
                OnREQ_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _REQ_DATE;
        partial void OnREQ_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnREQ_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SHIP_DATE
        {
            get
            {
                return _SHIP_DATE;
            }
            set
            {
                OnSHIP_DATEChanging(value);
                ReportPropertyChanging("SHIP_DATE");
                _SHIP_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SHIP_DATE");
                OnSHIP_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _SHIP_DATE;
        partial void OnSHIP_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnSHIP_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REFRENCE
        {
            get
            {
                return _REFRENCE;
            }
            set
            {
                OnREFRENCEChanging(value);
                ReportPropertyChanging("REFRENCE");
                _REFRENCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REFRENCE");
                OnREFRENCEChanged();
            }
        }
        private global::System.String _REFRENCE;
        partial void OnREFRENCEChanging(global::System.String value);
        partial void OnREFRENCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOTAL
        {
            get
            {
                return _TOTAL;
            }
            set
            {
                OnTOTALChanging(value);
                ReportPropertyChanging("TOTAL");
                _TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOTAL");
                OnTOTALChanged();
            }
        }
        private Nullable<global::System.Double> _TOTAL;
        partial void OnTOTALChanging(Nullable<global::System.Double> value);
        partial void OnTOTALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexPayments")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexPayments : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payment_Types
        {
            get
            {
                return _Payment_Types;
            }
            set
            {
                OnPayment_TypesChanging(value);
                ReportPropertyChanging("Payment_Types");
                _Payment_Types = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payment_Types");
                OnPayment_TypesChanged();
            }
        }
        private global::System.String _Payment_Types;
        partial void OnPayment_TypesChanging(global::System.String value);
        partial void OnPayment_TypesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexProducts")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexProducts : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexProducts object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexProducts CreateComplexProducts(global::System.Int32 id)
        {
            ComplexProducts complexProducts = new ComplexProducts();
            complexProducts.ID = id;
            return complexProducts;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRODUCT_NAME
        {
            get
            {
                return _PRODUCT_NAME;
            }
            set
            {
                OnPRODUCT_NAMEChanging(value);
                ReportPropertyChanging("PRODUCT_NAME");
                _PRODUCT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRODUCT_NAME");
                OnPRODUCT_NAMEChanged();
            }
        }
        private global::System.String _PRODUCT_NAME;
        partial void OnPRODUCT_NAMEChanging(global::System.String value);
        partial void OnPRODUCT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COST_PRICE
        {
            get
            {
                return _COST_PRICE;
            }
            set
            {
                OnCOST_PRICEChanging(value);
                ReportPropertyChanging("COST_PRICE");
                _COST_PRICE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COST_PRICE");
                OnCOST_PRICEChanged();
            }
        }
        private global::System.String _COST_PRICE;
        partial void OnCOST_PRICEChanging(global::System.String value);
        partial void OnCOST_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SALE_PRICE
        {
            get
            {
                return _SALE_PRICE;
            }
            set
            {
                OnSALE_PRICEChanging(value);
                ReportPropertyChanging("SALE_PRICE");
                _SALE_PRICE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SALE_PRICE");
                OnSALE_PRICEChanged();
            }
        }
        private global::System.String _SALE_PRICE;
        partial void OnSALE_PRICEChanging(global::System.String value);
        partial void OnSALE_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY
        {
            get
            {
                return _CATEGORY;
            }
            set
            {
                OnCATEGORYChanging(value);
                ReportPropertyChanging("CATEGORY");
                _CATEGORY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY");
                OnCATEGORYChanged();
            }
        }
        private global::System.String _CATEGORY;
        partial void OnCATEGORYChanging(global::System.String value);
        partial void OnCATEGORYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> e_date
        {
            get
            {
                return _e_date;
            }
            set
            {
                One_dateChanging(value);
                ReportPropertyChanging("e_date");
                _e_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("e_date");
                One_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _e_date;
        partial void One_dateChanging(Nullable<global::System.DateTime> value);
        partial void One_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> m_date
        {
            get
            {
                return _m_date;
            }
            set
            {
                Onm_dateChanging(value);
                ReportPropertyChanging("m_date");
                _m_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("m_date");
                Onm_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _m_date;
        partial void Onm_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onm_dateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexProductsOfPackingList")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexProductsOfPackingList : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexProductsOfPackingList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexProductsOfPackingList CreateComplexProductsOfPackingList(global::System.Int32 id)
        {
            ComplexProductsOfPackingList complexProductsOfPackingList = new ComplexProductsOfPackingList();
            complexProductsOfPackingList.ID = id;
            return complexProductsOfPackingList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRD_NAME
        {
            get
            {
                return _PRD_NAME;
            }
            set
            {
                OnPRD_NAMEChanging(value);
                ReportPropertyChanging("PRD_NAME");
                _PRD_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRD_NAME");
                OnPRD_NAMEChanged();
            }
        }
        private global::System.String _PRD_NAME;
        partial void OnPRD_NAMEChanging(global::System.String value);
        partial void OnPRD_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ComplexSupplier")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ComplexSupplier : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComplexSupplier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ComplexSupplier CreateComplexSupplier(global::System.Int32 id)
        {
            ComplexSupplier complexSupplier = new ComplexSupplier();
            complexSupplier.ID = id;
            return complexSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CONTACT
        {
            get
            {
                return _CONTACT;
            }
            set
            {
                OnCONTACTChanging(value);
                ReportPropertyChanging("CONTACT");
                _CONTACT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CONTACT");
                OnCONTACTChanged();
            }
        }
        private global::System.String _CONTACT;
        partial void OnCONTACTChanging(global::System.String value);
        partial void OnCONTACTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMPANY
        {
            get
            {
                return _COMPANY;
            }
            set
            {
                OnCOMPANYChanging(value);
                ReportPropertyChanging("COMPANY");
                _COMPANY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMPANY");
                OnCOMPANYChanged();
            }
        }
        private global::System.String _COMPANY;
        partial void OnCOMPANYChanging(global::System.String value);
        partial void OnCOMPANYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REMARKS
        {
            get
            {
                return _REMARKS;
            }
            set
            {
                OnREMARKSChanging(value);
                ReportPropertyChanging("REMARKS");
                _REMARKS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REMARKS");
                OnREMARKSChanged();
            }
        }
        private global::System.String _REMARKS;
        partial void OnREMARKSChanging(global::System.String value);
        partial void OnREMARKSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> E_DATE
        {
            get
            {
                return _E_DATE;
            }
            set
            {
                OnE_DATEChanging(value);
                ReportPropertyChanging("E_DATE");
                _E_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("E_DATE");
                OnE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _E_DATE;
        partial void OnE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnE_DATEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarAccountID")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarAccountID : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private Nullable<global::System.Int32> _Column1;
        partial void OnColumn1Changing(Nullable<global::System.Int32> value);
        partial void OnColumn1Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarAccountName")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarAccountName : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarAccountType")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarAccountType : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScalarAccountType object.
        /// </summary>
        /// <param name="type">Initial value of the type property.</param>
        public static ScalarAccountType CreateScalarAccountType(global::System.String type)
        {
            ScalarAccountType scalarAccountType = new ScalarAccountType();
            scalarAccountType.type = type;
            return scalarAccountType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="scalarBuyerNameOrderNameInvoice")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class scalarBuyerNameOrderNameInvoice : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new scalarBuyerNameOrderNameInvoice object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static scalarBuyerNameOrderNameInvoice CreatescalarBuyerNameOrderNameInvoice(global::System.Int32 id)
        {
            scalarBuyerNameOrderNameInvoice scalarBuyerNameOrderNameInvoice = new scalarBuyerNameOrderNameInvoice();
            scalarBuyerNameOrderNameInvoice.id = id;
            return scalarBuyerNameOrderNameInvoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER_NAME
        {
            get
            {
                return _BUYER_NAME;
            }
            set
            {
                OnBUYER_NAMEChanging(value);
                ReportPropertyChanging("BUYER_NAME");
                _BUYER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER_NAME");
                OnBUYER_NAMEChanged();
            }
        }
        private global::System.String _BUYER_NAME;
        partial void OnBUYER_NAMEChanging(global::System.String value);
        partial void OnBUYER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String order_name
        {
            get
            {
                return _order_name;
            }
            set
            {
                Onorder_nameChanging(value);
                ReportPropertyChanging("order_name");
                _order_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("order_name");
                Onorder_nameChanged();
            }
        }
        private global::System.String _order_name;
        partial void Onorder_nameChanging(global::System.String value);
        partial void Onorder_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ship_name
        {
            get
            {
                return _Ship_name;
            }
            set
            {
                OnShip_nameChanging(value);
                ReportPropertyChanging("Ship_name");
                _Ship_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ship_name");
                OnShip_nameChanged();
            }
        }
        private global::System.String _Ship_name;
        partial void OnShip_nameChanging(global::System.String value);
        partial void OnShip_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarBuyerNames")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarBuyerNames : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String buyer_name
        {
            get
            {
                return _buyer_name;
            }
            set
            {
                Onbuyer_nameChanging(value);
                ReportPropertyChanging("buyer_name");
                _buyer_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("buyer_name");
                Onbuyer_nameChanged();
            }
        }
        private global::System.String _buyer_name;
        partial void Onbuyer_nameChanging(global::System.String value);
        partial void Onbuyer_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarBuyerNameWithOrderName")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarBuyerNameWithOrderName : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BUYER
        {
            get
            {
                return _BUYER;
            }
            set
            {
                OnBUYERChanging(value);
                ReportPropertyChanging("BUYER");
                _BUYER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BUYER");
                OnBUYERChanged();
            }
        }
        private global::System.String _BUYER;
        partial void OnBUYERChanging(global::System.String value);
        partial void OnBUYERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ORDER_NAME
        {
            get
            {
                return _ORDER_NAME;
            }
            set
            {
                OnORDER_NAMEChanging(value);
                ReportPropertyChanging("ORDER_NAME");
                _ORDER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ORDER_NAME");
                OnORDER_NAMEChanged();
            }
        }
        private global::System.String _ORDER_NAME;
        partial void OnORDER_NAMEChanging(global::System.String value);
        partial void OnORDER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ORDER_TOTAL
        {
            get
            {
                return _ORDER_TOTAL;
            }
            set
            {
                OnORDER_TOTALChanging(value);
                ReportPropertyChanging("ORDER_TOTAL");
                _ORDER_TOTAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORDER_TOTAL");
                OnORDER_TOTALChanged();
            }
        }
        private Nullable<global::System.Double> _ORDER_TOTAL;
        partial void OnORDER_TOTALChanging(Nullable<global::System.Double> value);
        partial void OnORDER_TOTALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REF
        {
            get
            {
                return _REF;
            }
            set
            {
                OnREFChanging(value);
                ReportPropertyChanging("REF");
                _REF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REF");
                OnREFChanged();
            }
        }
        private global::System.String _REF;
        partial void OnREFChanging(global::System.String value);
        partial void OnREFChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarCurrencyNames")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarCurrencyNames : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarFreightName")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarFreightName : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarLogin")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarLogin : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarOrderID")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarOrderID : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScalarOrderID object.
        /// </summary>
        /// <param name="order_id">Initial value of the order_id property.</param>
        public static ScalarOrderID CreateScalarOrderID(global::System.Int32 order_id)
        {
            ScalarOrderID scalarOrderID = new ScalarOrderID();
            scalarOrderID.order_id = order_id;
            return scalarOrderID;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                Onorder_idChanging(value);
                ReportPropertyChanging("order_id");
                _order_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_id");
                Onorder_idChanged();
            }
        }
        private global::System.Int32 _order_id;
        partial void Onorder_idChanging(global::System.Int32 value);
        partial void Onorder_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarPackingList")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarPackingList : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pck
        {
            get
            {
                return _pck;
            }
            set
            {
                OnpckChanging(value);
                ReportPropertyChanging("pck");
                _pck = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pck");
                OnpckChanged();
            }
        }
        private global::System.String _pck;
        partial void OnpckChanging(global::System.String value);
        partial void OnpckChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarPaymentNames")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarPaymentNames : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarProductCPSP")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarProductCPSP : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prd_cp
        {
            get
            {
                return _prd_cp;
            }
            set
            {
                Onprd_cpChanging(value);
                ReportPropertyChanging("prd_cp");
                _prd_cp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prd_cp");
                Onprd_cpChanged();
            }
        }
        private global::System.String _prd_cp;
        partial void Onprd_cpChanging(global::System.String value);
        partial void Onprd_cpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prd_sp
        {
            get
            {
                return _prd_sp;
            }
            set
            {
                Onprd_spChanging(value);
                ReportPropertyChanging("prd_sp");
                _prd_sp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prd_sp");
                Onprd_spChanged();
            }
        }
        private global::System.String _prd_sp;
        partial void Onprd_spChanging(global::System.String value);
        partial void Onprd_spChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarProductNames")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarProductNames : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prd_name
        {
            get
            {
                return _prd_name;
            }
            set
            {
                Onprd_nameChanging(value);
                ReportPropertyChanging("prd_name");
                _prd_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prd_name");
                Onprd_nameChanged();
            }
        }
        private global::System.String _prd_name;
        partial void Onprd_nameChanging(global::System.String value);
        partial void Onprd_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prd_cp
        {
            get
            {
                return _prd_cp;
            }
            set
            {
                Onprd_cpChanging(value);
                ReportPropertyChanging("prd_cp");
                _prd_cp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prd_cp");
                Onprd_cpChanged();
            }
        }
        private global::System.String _prd_cp;
        partial void Onprd_cpChanging(global::System.String value);
        partial void Onprd_cpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prd_sp
        {
            get
            {
                return _prd_sp;
            }
            set
            {
                Onprd_spChanging(value);
                ReportPropertyChanging("prd_sp");
                _prd_sp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prd_sp");
                Onprd_spChanged();
            }
        }
        private global::System.String _prd_sp;
        partial void Onprd_spChanging(global::System.String value);
        partial void Onprd_spChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarProductQuantity")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarProductQuantity : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScalarProductQuantity object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ScalarProductQuantity CreateScalarProductQuantity(global::System.Int32 id)
        {
            ScalarProductQuantity scalarProductQuantity = new ScalarProductQuantity();
            scalarProductQuantity.id = id;
            return scalarProductQuantity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> prd_quantity
        {
            get
            {
                return _prd_quantity;
            }
            set
            {
                Onprd_quantityChanging(value);
                ReportPropertyChanging("prd_quantity");
                _prd_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prd_quantity");
                Onprd_quantityChanged();
            }
        }
        private Nullable<global::System.Int32> _prd_quantity;
        partial void Onprd_quantityChanging(Nullable<global::System.Int32> value);
        partial void Onprd_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarShipmentId")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarShipmentId : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScalarShipmentId object.
        /// </summary>
        /// <param name="ship_supp_id">Initial value of the ship_supp_id property.</param>
        public static ScalarShipmentId CreateScalarShipmentId(global::System.Int32 ship_supp_id)
        {
            ScalarShipmentId scalarShipmentId = new ScalarShipmentId();
            scalarShipmentId.ship_supp_id = ship_supp_id;
            return scalarShipmentId;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ship_supp_id
        {
            get
            {
                return _ship_supp_id;
            }
            set
            {
                Onship_supp_idChanging(value);
                ReportPropertyChanging("ship_supp_id");
                _ship_supp_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ship_supp_id");
                Onship_supp_idChanged();
            }
        }
        private global::System.Int32 _ship_supp_id;
        partial void Onship_supp_idChanging(global::System.Int32 value);
        partial void Onship_supp_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarShipmentOrderID")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarShipmentOrderID : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScalarShipmentOrderID object.
        /// </summary>
        /// <param name="ship_supp_id">Initial value of the ship_supp_id property.</param>
        public static ScalarShipmentOrderID CreateScalarShipmentOrderID(global::System.Int32 ship_supp_id)
        {
            ScalarShipmentOrderID scalarShipmentOrderID = new ScalarShipmentOrderID();
            scalarShipmentOrderID.ship_supp_id = ship_supp_id;
            return scalarShipmentOrderID;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ship_supp_id
        {
            get
            {
                return _ship_supp_id;
            }
            set
            {
                Onship_supp_idChanging(value);
                ReportPropertyChanging("ship_supp_id");
                _ship_supp_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ship_supp_id");
                Onship_supp_idChanged();
            }
        }
        private global::System.Int32 _ship_supp_id;
        partial void Onship_supp_idChanging(global::System.Int32 value);
        partial void Onship_supp_idChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarSupplierNames")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarSupplierNames : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String supp_name
        {
            get
            {
                return _supp_name;
            }
            set
            {
                Onsupp_nameChanging(value);
                ReportPropertyChanging("supp_name");
                _supp_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("supp_name");
                Onsupp_nameChanged();
            }
        }
        private global::System.String _supp_name;
        partial void Onsupp_nameChanging(global::System.String value);
        partial void Onsupp_nameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="TradingModel", Name="ScalarSupplierNameWithShipmentName")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ScalarSupplierNameWithShipmentName : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScalarSupplierNameWithShipmentName object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ScalarSupplierNameWithShipmentName CreateScalarSupplierNameWithShipmentName(global::System.Int32 id)
        {
            ScalarSupplierNameWithShipmentName scalarSupplierNameWithShipmentName = new ScalarSupplierNameWithShipmentName();
            scalarSupplierNameWithShipmentName.id = id;
            return scalarSupplierNameWithShipmentName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUPP_NAME
        {
            get
            {
                return _SUPP_NAME;
            }
            set
            {
                OnSUPP_NAMEChanging(value);
                ReportPropertyChanging("SUPP_NAME");
                _SUPP_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUPP_NAME");
                OnSUPP_NAMEChanged();
            }
        }
        private global::System.String _SUPP_NAME;
        partial void OnSUPP_NAMEChanging(global::System.String value);
        partial void OnSUPP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ship_name
        {
            get
            {
                return _Ship_name;
            }
            set
            {
                OnShip_nameChanging(value);
                ReportPropertyChanging("Ship_name");
                _Ship_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ship_name");
                OnShip_nameChanged();
            }
        }
        private global::System.String _Ship_name;
        partial void OnShip_nameChanging(global::System.String value);
        partial void OnShip_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion

    }

    #endregion

    
}
